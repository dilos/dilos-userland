Someday GNU find will be available for the SFW build environment (maybe
LSARC/2008/531).  When that happens this patch will no longer be required.




Index: quilt/fold.in
===================================================================
--- quilt/fold.in.orig	2008-11-05 14:11:24.246878000 -0600
+++ quilt/fold.in	2008-11-05 14:18:18.240681000 -0600
@@ -103,7 +103,7 @@ if [ -z "$failed" ]
 then
 	# Copy additional files from workdir to the backup directory
 	# For this patch
-	for file in $(find $workdir -type f -a ! -path "$workdir/.timestamp")
+	for file in $(find $workdir -type f | @GREP@ -v -E "^$workdir/.timestamp$")
 	do
 		file="${file:${#workdir}+1}"
 		backup_file="$(backup_file_name $top "$file")"
@@ -121,7 +121,7 @@ fi
 if [ -n "$failed" ]
 then
 	# Restore all files to the state from before applying the patch
-	for file in $(find $workdir -type f -a ! -path "$workdir/.timestamp")
+	for file in $(find $workdir -type f | @GREP@ -v -E "^$workdir/.timestamp$")
 	do
 		file="${file:${#workdir}+1}"
 		if ! mv -f "$workdir/$file" "$file"
Index: quilt/scripts/patchfns.in
===================================================================
--- quilt/scripts/patchfns.in.orig	2008-11-05 14:11:24.251209000 -0600
+++ quilt/scripts/patchfns.in	2008-11-05 14:18:18.242696000 -0600
@@ -649,8 +649,8 @@ files_in_patch()
 	if [ -d "$path" ]
 	then
 		local files
-		files=( $(find "$path" -type f \
-			       -a ! -path "$path/.timestamp") ) \
+		files=( $(find "$path" -type f | \
+				@GREP@ -v -E "^$path/.timestamp$") ) \
 		|| return 1
 		printf "%s\n" "${files[@]#$path/}"
 	fi
Index: quilt/grep.in
===================================================================
--- quilt/grep.in.orig	2008-11-05 14:11:24.257342000 -0600
+++ quilt/grep.in	2008-11-05 14:18:18.243720000 -0600
@@ -114,10 +114,9 @@ fi
 # may pass a single filename to grep and cause it to omit the file name.
 [ -z "$opt_h" ] && opt_H=-H
 
-find "${myargs[@]}" \( \
-	-path "./$QUILT_PATCHES/*" -o \
-	-path "./$QUILT_PC/*" \) -prune -o \
+find "${myargs[@]}" \
 	-type f -print \
+| @GREP@ -v -E "^\./$QUILT_(PATCHES|PC)/" \
 | xargs grep $opt_H "${args[@]}" \
 | if [ ${#myargs[@]} -eq 0 ]; then
 	sed -e 's,^./,,'
Index: configure.ac
===================================================================
--- configure.ac.orig	2008-11-05 14:11:24.263434000 -0600
+++ configure.ac	2008-11-05 14:18:18.244870000 -0600
@@ -296,18 +296,18 @@ fi
 
 QUILT_COMPAT_PROG_PATH(FIND, find)
 
-AC_MSG_CHECKING([whether $FIND -path works])
-if $FIND . -path '*' >/dev/null 2>&1; then
-	AC_MSG_RESULT(yes)
-else
-	AC_MSG_RESULT(no)
-	AC_MSG_ERROR([
-Sorry, you have a version of find which doesn't understand -path.
-$PACKAGE_NAME needs it.  If you have access to a version of find which
-does understand -path, you can supply its path with the
-'--with-find=' option.
-])
-fi
+# AC_MSG_CHECKING([whether $FIND -path works])
+# if $FIND . -path '*' >/dev/null 2>&1; then
+# 	AC_MSG_RESULT(yes)
+# else
+# 	AC_MSG_RESULT(no)
+# 	AC_MSG_ERROR([
+# Sorry, you have a version of find which doesn't understand -path.
+# $PACKAGE_NAME needs it.  If you have access to a version of find which
+# does understand -path, you can supply its path with the
+# '--with-find=' option.
+# ])
+# fi
 
 QUILT_COMPAT_PROG_PATH_OPT(DIFFSTAT, diffstat)
 
Index: Makefile.in
===================================================================
--- Makefile.in.orig	2008-11-05 14:15:59.439693000 -0600
+++ Makefile.in	2008-11-05 14:18:18.246168000 -0600
@@ -262,6 +262,7 @@ $(patsubst %.in,%,$(wildcard bin/*.in qu
 		-e 's:@QUILT_DIR''@:$(datadir)/$(PACKAGE):g'		\
 		-e 's:@PERL''@:$(PERL):g'				\
 		-e 's:@BASH''@:$(BASH):g'				\
+		-e 's:@GREP''@:$(GREP):g'				\
 		-e 's:@PATCH''@:$(PATCH):g'				\
 		-e 's:@VERSION''@:$(VERSION):g'				\
 		-e 's:@RELEASE''@:$(RELEASE):g'				\
@@ -281,7 +282,7 @@ Makefile : Makefile.in configure
 	@echo "Please run ./configure"
 	@false
 
-compat_leftover := $(filter-out $(COMPAT),$(shell $(FIND) compat -maxdepth 1 -type f -perm +111))
+compat_leftover := $(filter-out $(COMPAT),$(shell $(FIND) compat -type f -perm +rwx))
 
 .PHONY :: compat
 compat :: $(COMPAT)

Index: gcc-4.4.4/ChangeLog.csl
===================================================================
--- /dev/null
+++ gcc-4.4.4/ChangeLog.csl
@@ -0,0 +1,422 @@
+2006-04-06  Carlos O'Donell  <carlos@codesourcery.com>
+
+	* gcc/testsuite/gcc.dg/pragma-re-4.c: New test.
+	* gcc/c-pragma.c (init_pragma) : Call c_register_pragma_with_expansion
+	for pragma redefine_extname.
+
+2005-06-29  Joseph S. Myers  <joseph@codesourcery.com>
+
+	* gcc/dwarf2.h (DW_AT_SUN_amd64_parmdump): New.
+	* gcc/dwarf2out.c (gen_subprogram_die): Add this attribute.
+	* gcc/doc/invoke.texi (-msave-args): New x86-64 option.
+	* gcc/config/i386/i386.h (MASK_SAVE_ARGS, TARGET_SAVE_ARGS): New.
+	(TARGET_SWITCHES): Add -msave-args.
+	* gcc/config/i386/i386.c (struct ix86_frame): Add nmsave_args and
+	padding0.
+	(pro_epilogue_adjust_stack): Declare.
+	(ix86_nsaved_args): New.
+	(override_options, ix86_can_use_return_insn_p,
+	ix86_frame_pointer_required, ix86_compute_frame_layout,
+	ix86_emit_save_regs, ix86_emit_save_regs_using_mov,
+	ix86_expand_prologue, ix86_expand_epilogue): Handle -msave-args.
+
+2005-05-20  Joseph S. Myers  <joseph@codesourcery.com>
+
+	* gcc/common.opt (fconstant-pools): New.
+	* gcc/doc/invoke.texi (-fno-constant-pools): Document.
+	* gcc/flags.h (flag_constant_pools): New.
+	* gcc/opts.c (common_handle_option): Handle OPT_fconstant_pools.
+	* gcc/toplev.c (flag_constant_pools): New.
+	* gcc/varasm.c (force_const_mem): Return NULL_RTX for
+	-fno-constant-pools.
+	* gcc/reload.c (find_reloads): Do not try reloading a constant
+	from a constant pool if -fno-constant-pools.
+
+2005-05-19  Joseph S. Myers  <joseph@codesourcery.com>
+
+	* gcc/config/sparc/sparc.h (MASK_NO_INTEGER_LDD_STD,
+	TARGET_INTEGER_LDD_STD): New.
+	(TARGET_SWITCHES): Define -mno-integer-ldd-std option.
+	* gcc/doc/invoke.texi (-mno-integer-std-ldd): Document.
+	* gcc/config/sparc/sparc.c (save_regs, restore_regs,
+	sparc_splitdi_legitimate, sparc_flat_save_restore): Check
+	TARGET_INTEGER_LDD_STD.
+	* gcc/config/sparc/sparc.md (movdi_insn_sp32_v9, movdi_insn_sp32):
+	Disable unless TARGET_INTEGER_LDD_STD.
+	(movdi_insn_sp32_v9_nolddstd, movdi_insn_sp32_nolddstd): New
+	patterns if !TARGET_INTEGER_LDD_STD.
+	(define_peephole2): Disable use of widen_memory_access unless
+	TARGET_INTEGER_LDD_STD.
+
+2005-05-05  Michael Pogue  <michael.pogue@sun.com>
+            Joseph S. Myers  <joseph@codesourcery.com>
+
+	* gcc/common.opt (-fdwarf2-indirect-strings): New option.
+	* gcc/doc/invoke.texi (-fdwarf2-indirect-strings): Document.
+	* gcc/flags.h (flag_dwarf2_indirect_strings): New.
+	* gcc/toplev.c (flag_dwarf2_indirect_strings): New.
+	* gcc/opts.c (common_handle_option): Handle
+	-fdwarf2-indirect-strings.
+	* gcc/dwarf2out.c (AT_string_form): Check
+	flag_dwarf2_indirect_strings.
+	* gcc/testsuite/gcc.dg/debug/dwarf2/dwarf-strp-1.c: New test.
+
+2005-04-22  Joseph S. Myers  <joseph@codesourcery.com>
+
+	* gcc/varasm.c (assemble_alias): Return early if
+	TREE_ASM_WRITTEN (decl).
+	* gcc/testsuite/gcc.dg/weak/weak-13.c: New test.
+
+2004-11-17  Joseph Myers  <joseph@codesourcery.com>
+
+	* gcc/cp/g++spec.c (lang_specific_driver): Add a -R option if
+	-lstdc++ is added.
+	* gcc/cp/Make-lang.in (g++spec.o): Define LIBDIR.
+	* gcc/config/i386/t-sol2-10 (MULTILIB_DIRNAMES,
+	MULTILIB_OSDIRNAMES): Use amd64 instead of 64.
+	* gcc/config/i386/i386.c (optimization_options): Use
+	SUBTARGET_OPTIMIZATION_OPTIONS.
+	* gcc/config/i386/sol2-10.h (SUBTARGET_OPTIMIZATION_OPTIONS):
+	Define.
+	(TARGET_SUBTARGET_DEFAULT): Don't include
+	MASK_OMIT_LEAF_FRAME_POINTER.
+
+2004-11-07  Mark Mitchell <mark@codesourcery.com>
+
+	* gcc/config/sparc/sol2.h (ASM_OUTPUT_CALL): Fix typo.
+
+2004-10-26  Mark Mitchell <mark@codesourcery.com>
+
+	* gcc/config/i386/sol2.h (X86_FILE_START_VERSION_DIRECTIVE):
+	Define to false.
+
+2004-10-25  Mark Mitchell <mark@codesourcery.com>
+
+	* gcc/crtstuff.c (IN_LIBGCC2): Define it.
+	(EH_FRAME_SECTION_CONST): Check EH_TABLES_CAN_BE_READ_ONLY
+	instead of HAVE_LD_RO_RW_SECTION_MIXING.
+	* gcc/defaults.h (EH_TABLES_CAN_BE_READ_ONLY): New macro.
+	* gcc/dwarf2out.c (named_section_eh_frame_section): Check
+	EH_TABLES_CANBE_READ_ONLY.
+	* gcc/except.c (default_exception_section): Likewise.
+	* gcc/config/i386/sol2.h (EH_TABLES_CAN_BE_READ_ONLY): Define.
+
+2004-10-14  Mark Mitchell <mark@codesourcery.com>
+
+	* gcc/config/t-slibgcc-sld (SHLIB_LINK): Make symlinks entirely
+	within the multilib directory.
+
+2004-10-12  Mark Mitchell <mark@codesourcery.com>
+
+	Revert:
+	* gcc/config/i386/sol2-10.h (LIBGCC_SPEC): Add support for -nolibgcc.
+
+	* gcc/config.gcc: Do not build crt1.o, crti.o, crtn.o, gcrt1.o.
+
+	* gcc/fixinc/inclhack.def (solaris_stdio_tag): Add bypass.
+
+2004-09-24  Mark Mitchell <mark@codesourcery.com>
+
+	Revert:
+	2004-09-24  Mark Mitchell <mark@codesourcery.com>
+	* gcc/config/sol2-c.c (cmn_err_flag_specs): Add "#"
+	(cmn_err_char_table): Likewise.
+	(solaris_format_types): Likewise.
+	* gcc/testsuite/gcc.dg/format/cmn-err-1.c: Add "#" tests.
+
+2004-09-24  Mark Mitchell <mark@codesourcery.com>
+
+	* gcc/config/i386/sol2-10.h (LIBGCC_SPEC): Add support for -nolibgcc.
+
+	* gcc/config/sol2-c.c (cmn_err_flag_specs): Add "#"
+	(cmn_err_char_table): Likewise.
+	(solaris_format_types): Likewise.
+	* gcc/testsuite/gcc.dg/format/cmn-err-1.c: Add "#" tests.
+
+2004-09-22  Mark Mitchell <mark@codesourcery.com>
+
+	* gcc/config/i386/sol2.h (ASM_OUTPUT_CALL): Use print_operand.
+	* gcc/config/sparc/sol2.h (ASM_OUTPUT_CALL): Likewise.
+
+	* gcc/sol2-c.c (cmn_err_char_table): Add "p".
+
+	* gcc/dwarf2out.c (scope_die_for): If the containing scope is a
+	TRANSLATION_UNIT_DECL, consider it to be a global.
+
+	* gcc/fixinc/inclhack.def (solaris_longlong): New test.
+	(sun_auth_proto): Avoid modifying headers from Solaris 2.8 or
+	higher.
+	* gcc/fixinc/fixincl.x: Regenerated.
+
+	* gcc/testsuite/lib/gcc-dg.exp (dg-forbid-option): New function.
+	* gcc/testsuite/lib/target-supports.exp
+	(check_visibility_available): Really test the compiler.
+	* gcc/testsuite/g++.dg/abi/bitfield3.C: Use dg-forbid-option -m64.
+	* gcc/testsuite/g++.dg/abi/bitfield8.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/dtor1.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/empty10.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/empty7.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/empty9.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/layout3.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/layout4.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/thunk1.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/thunk2.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/vbase11.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/vthunk2.C: Likewise.
+	* gcc/testsuite/g++.dg/abi/vthunk3.C: Likewise.
+	* gcc/testsuite/g++.dg/ext/attrib8.C: Likewise.
+	* gcc/testsuite/g++.dg/opt/langbranch2.C: Likewise.
+	* gcc/testsuite/g++.dg/opt/reg-stack4.C: Likewise.
+	* gcc/testsuite/g++.old-deja/g++.ext/attrib1.C: Likewise.
+	* gcc/testsuite/g++.old-deja/g++.ext/attrib2.C: Likewise.
+	* gcc/testsuite/g++.old-deja/g++.ext/attrib3.C: Likewise.
+	* gcc/testsuite/g++.old-deja/g++.other/store-expr1.C: Likewise.
+	* gcc/testsuite/g++.old-deja/g++.other/store-expr2.C: Likewise.
+	* gcc/testsuite/gcc.dg/20000609-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20000720-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20011107-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20011119-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020108-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020122-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020122-3.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020201-3.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020206-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020218-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020310-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020411-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020418-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020426-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020426-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020517-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020523-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020523-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/20020729-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20030204-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20030826-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/20030926-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/20031202-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/980312-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/980313-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/990117-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/990424-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/990524-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/991230-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/const-elim-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-387-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-387-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-387-3.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-387-4.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-387-5.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-387-6.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-asm-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-bitfield1.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-bitfield2.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-loop-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-loop-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-loop-3.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-pentium4-not-mull.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-pic-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-regparm.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-signbit-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-signbit-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-signbit-3.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-sse-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-sse-5.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-sse-8.c: Likewise.
+	* gcc/testsuite/gcc.dg/i386-unroll-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/tls/opt-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/tls/opt-2.c: Likewise.
+	* gcc/testsuite/gcc.dg/unroll-1.c: Likewise.
+	* gcc/testsuite/gcc.misc-tests/i386-pf-3dno-1.c: Likewise.
+	* gcc/testsuite/gcc.misc-tests/i386-pf-athlon-1.c: Likewise.
+	* gcc/testsuite/gcc.misc-tests/i386-pf-none-1.c: Likewise.
+	* gcc/testsuite/gcc.misc-tests/i386-pf-sse-1.c: Likewise.
+	* gcc/testsuite/gcc.dg/tls/alias-1.c: Use dg-require-visibility.
+	* gcc/testsuite/gcc.c-torture/execute/20010129-1.x: Do not use
+	-mtune=i686 when -m64 is specified.
+	* gcc/testsuite/g++.dg/eh/badalloc1.C: Robustify.
+	* libstdc++-v3/testsuite/27_io/basic_stream/extractors_arithmetic/char/12.cc: XFAIL on all Solaris targets.
+
+	* gcc/c-decl.c (implicitly_declare): Call
+	maybe_apply_renaming_pragma.
+	(builtin_function): Call maybe_apply_renaming_pragma for all
+	global variables and functions.
+	* gcc/testsuite/gcc.dg/pragma-re-3.c: New test.
+	Backport:
+	2004-06-20  Zack Weinberg  <zack@codesourcery.com>
+	* gcc/c-common.h (has_c_linkage): New interface.
+	* gcc/c-cppbuiltin.c (maybe_apply_renaming_pragma): Rewrite
+	according to clarified semantics.  Always recognize, but do not
+	necessarily execute.
+	* gcc/c-decl.c (builtin_function): Don't call make_decl_rtl.
+	* gcc/c-objc-common.c (has_c_linkage): Stub implementation.
+	* gcc/cp/except.c (nothrow_libfn_p): Look at DECL_NAME, not
+	DECL_ASSEMBLER_NAME.
+
+2004-08-04  Daniel Jacobowitz  <dan@debian.org>
+
+	* config/sol2-c.c (solaris_pragma_align): Allow #pragma align after
+	the first declaration.
+	* config/i386/sol2-10.h (SUBTARGET_OVERRIDE_OPTIONS): Re-enable
+	asynchronous unwind tables by default for 64-bit.
+
+	* gcc.dg/pragma-align-2.c: Test for #pragma align after the
+	definition of y16.
+
+2004-08-03  Daniel Jacobowitz  <dan@debian.org>
+
+	* c-pragma.c (maybe_apply_pending_pragma_weaks): Mark the new decl
+	as weak.
+
+2004-07-27  Daniel Jacobowitz  <dan@debian.org>
+
+	* Makefile.in (c-objc-common.o): Update dependencies.
+	* config/sol2-c.c (solaris_register_pragmas): Use
+	c_register_pragma_with_expansion.
+	* config/sol2.h (HANDLE_PRAGMA_PACK_WITH_EXPANSION): Define.
+	* doc/extend.texi (Solaris Pragmas): Mention macro expansion
+	for #pragma align.
+	* c-objc-common.c: Include "c-pragma.h".
+	(c_objc_common_finish_file): Call maybe_apply_pending_pragma_weaks.
+	* c-pragma.c (maybe_apply_pending_pragma_weaks): New function.
+	(c_register_pragma): Update call to cpp_register_pragma.
+	(c_register_pragma_with_expansion): New function.
+	(init_pragma): Honor HANDLE_PRAGMA_PACK_WITH_EXPANSION.
+	* c-pragma.h (c_register_pragma_with_expansion)
+	(maybe_apply_pending_pragma_weaks): New prototypes.
+	* cpplib.c (struct pragma_entry): Add allow_expansion.
+	(insert_pragma_entry): Take allow_expansion flag.
+	(cpp_register_pragma): Likewise.
+	(_cpp_init_internal_pragmas): Update calls to cpp_register_pragma.
+	(do_pragma): Honor allow_expansion.
+	* cpplib.h (cpp_register_pragma): Update prototype.
+
+	* Make-lang.in (cp/decl2.c): Update dependencies.
+	* decl2.c (finish_file): Call maybe_apply_pending_pragma_weaks.
+
+	* gcc.dg/pragma-align-2.c: Test macro expansion.
+	* gcc.dg/pragma-align.c: Fix abort on -m64.
+	* gcc.dg/pragma-pack-2.c: New test.
+
+2004-07-27  Daniel Jacobowitz  <dan@debian.org>
+
+	* config/i386/sol2-10.h (LINK_ARCH64_SPEC_BASE)
+	(LINK_ARCH64_SPEC, LINK_ARCH64_SPEC, TARGET_LD_EMULATION)
+	(LINK_ARCH_SPEC): Define.
+	* config/i386/t-sol2-10: Define MULTILIB_OSDIRNAMES.
+	(EXTRA_MULTILIB_PARTS): Remove crti.o, crtn.o, crt1.o, gcrt1.o.
+	* config.gcc (i[34567]86-*-solaris2*): Define TARGET_GNU_LD.
+
+	* config/sol2-c.c, config/sol2.c: Replace %< and %> with "'".
+
+2004-07-23  Daniel Jacobowitz  <dan@debian.org>
+
+	* config/i386/sol2.h (ASM_PREFERRED_EH_DATA_FORMAT): Handle 64-bit.
+	* config/i386/sol2-10.h (CRT_GET_RFIB_DATA): Redefine.
+	* config.gcc (i[34567]86-*-solaris2*): Set need_64bit_hwint.
+	* config/i386/t-sol2: Introduce multilib support.
+
+2004-07-22  Daniel Jacobowitz  <dan@debian.org>
+
+	* config/i386/sol2-10.h (MULTILIB_DEFAULTS): Define.
+	* config/i386/t-sol2-10: New file.
+	* config.gcc (i[34567]86-*-solaris2*): Use t-sol2-10.
+
+2004-07-21  Daniel Jacobowitz  <dan@debian.org>
+
+	* config/i386/i386.c (i386_solaris_elf_named_section): New function.
+	* config/i386/i386-protos.h (i386_solaris_elf_named_section): Add
+	prototype.
+	* config/i386/sol2-10.h (TARGET_ASM_NAMED_SECTION): Redefine.
+
+2004-07-20  Daniel Jacobowitz  <dan@debian.org>
+
+	* config/i386/i386.c (override_options): Move
+	SUBTARGET_OVERRIDE_OPTIONS before defaulting flag_omit_frame_pointer.
+
+2004-07-20  Daniel Jacobowitz  <dan@debian.org>
+
+	* config.gcc (i[34567]86-*-solaris2*): Handle Solaris 2.10.
+	* config/i386/sol2-10.h: New file.
+	* config/i386/sol2.h (ASM_QUAD): Don't undefine for biarch targets.
+
+2004-07-19  Daniel Jacobowitz  <dan@debian.org>
+
+	* Makefile.in (c-format.o): Depend on c-format.h.
+	* c-format.h: New file.
+	(struct format_char_info): Add CHAIN member.
+	* c-format.c: Move some types and constants to c-format.h.
+	(format_type_error): Set to -1.
+	(struct function_format_info): Use an int for format_type.
+	(decode_format_type): Return an int.  Return format_type_error
+	on error.
+	(print_char_table, asm_fprintf_char_table, gcc_diag_char_table)
+	(gcc_diag_char_table, gcc_cdiag_char_table, gcc_cxxdiag_char_table)
+	(scan_char_table, time_char_table, monetary_char_table): Initialize
+	CHAIN to NULL.
+	(n_format_types): New variable.
+	(check_format_info_main): Handle CHAIN in format_char_info.
+	(handle_format_attribute): Handle TARGET_FORMAT_TYPES and
+	TARGET_N_FORMAT_TYPES.
+	* config.gcc (i[34567]86-*-solaris2*, sparc64-*-solaris2*)
+	(sparc-*-solaris2*): Include config/t-sol2 and config/sol2-c.c.
+	* config/sol2-c.c: New file.
+	* config/t-sol2: New file.
+	* config/sol2.h (TARGET_N_FORMAT_TYPES, TARGET_FORMAT_TYPES): Define.
+	* config/sparc/elf.h, config/sparc/sp64-elf.h: Undefine
+	TARGET_N_FORMAT_TYPES and TARGET_FORMAT_TYPES.
+
+	* doc/extend.texi (Target Format Checks): New section.
+	(Function Attributes): Mention it.
+	* doc/invoke.texi: Mention target format checks.
+	* doc/sourcebuild.texi: Mention target format checks.
+	* dc/tm.texi (Misc): Document TARGET_N_FORMAT_TYPES and
+	TARGET_FORMAT_TYPES.
+
+2004-07-19  Daniel Jacobowitz  <dan@debian.org>
+
+	* gcc.dg/format/cmn-err-1.c: New test.
+
+2004-07-19  Daniel Jacobowitz  <dan@debian.org>
+
+	* config.gcc (i[34567]86-*-solaris2*, sparc64-*-solaris2*)
+	(sparc-*-solaris2*): Include sol2.o and sol2-protos.h.
+	* config/sol2-c.c: Include "tm.h", "tm_p.h", "toplev.h",
+	"cpplib.h", "c-pragma.h", "c-common.h".
+	(solaris_pragma_align, solaris_pragma_init, solaris_pragma_fini)
+	(solaris_register_pragmas): New functions.
+	* config/sol2-protos.h: New file.
+	* config/sol2.c: New file.
+	* config/sol2.h (SOLARIS_ATTRIBUTE_TABLE, ASM_DECLARE_FUNCTION_SIZE)
+	(REGISTER_TARGET_PRAGMAS): New macros.
+	(solaris_pending_aligns, solaris_pending_inits)
+	(solaris_pending_finis): New variables.
+	* config/t-sol2 (sol2-c.o): Update dependencies.
+	(sol2.o): New rule.
+	* config/i386/i386.c (TARGET_INSERT_ATTRIBUTES): Define in terms of
+	SUBTARGET_INSERT_ATTRIBUTES.
+	(ix86_attribute_table): Include SUBTARGET_ATTRIBUTE_TABLE.
+	* config/i386/sol2.h (SUBTARGET_INSERT_ATTRIBUTES)
+	(SUBTARGET_ATTRIBUTE_TABLE, ASM_OUTPUT_CALL): Define.
+	* config/sparc/elf.h (ASM_DECLARE_FUNCTION_SIZE): Redefine.
+	* config/sparc/sp64-elf.h (ASM_DECLARE_FUNCTION_SIZE): Redefine.
+	* config/sparc/sol2.h (SUBTARGET_INSERT_ATTRIBUTES)
+	(SUBTARGET_ATTRIBUTE_TABLE, ASM_OUTPUT_CALL): Define.
+	* config/sparc/sparc.c (sparc_attribute_table): New.
+	(TARGET_INSERT_ATTRIBUTES): Define in terms of
+	SUBTARGET_INSERT_ATTRIBUTES.
+	(TARGET_ATTRIBUTE_TABLE): Define if SUBTARGET_ATTRIBUTE_TABLE
+	is defined.
+	* doc/extend.texi (Solaris Pragmas): New section.
+
+2004-07-19  Daniel Jacobowitz  <dan@debian.org>
+
+	* testsuite/gcc.dg/pragma-align-2.c: New test.
+	* testsuite/gcc.dg/pragma-init-fini.c: New test.
+	* testsuite/gcc.dg/pragma-align.c: Change from compile to run.
+	Run on Solaris targets.
+
+2004-07-10  Daniel Jacobowitz  <dan@debian.org>
+
+	* config/i386/i386.c (override_options): Pick a 64-bit CPU
+	for the default tuning if TARGET_64BIT.
Index: gcc-4.4.4/README.md
===================================================================
--- /dev/null
+++ gcc-4.4.4/README.md
@@ -0,0 +1,8 @@
+This is GCC with the patches from CodeSourcery and Sun Microsystems used in
+the gcc 3.4.3 shipped with Solaris on the codesourcery/* and sun/* branches,
+and the GCCFSS sources from the git repository in their source tarball in the
+sun/gccfss* branches.
+
+The il-* branches contain the Solaris patches rebased forward across GCC
+versions in an attempt to bring them up to date.  All stupidity in the merges is
+mine.
Index: gcc-4.4.4/fixincludes/fixincl.x
===================================================================
--- gcc-4.4.4/fixincludes/fixincl.x
+++ gcc-4.4.4/fixincludes/fixincl.x
@@ -2,11 +2,11 @@
  * 
  * DO NOT EDIT THIS FILE   (fixincl.x)
  * 
- * It has been AutoGen-ed  Saturday February 28, 2009 at 10:11:41 AM PST
+ * It has been AutoGen-ed  Saturday May 14, 2011 at 01:24:31 AM EDT
  * From the definitions    inclhack.def
  * and the template file   fixincl
  */
-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Feb 28 10:11:41 PST 2009
+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat May 14 01:24:31 EDT 2011
  *
  * You must regenerate it.  Use the ./genfixes script.
  *
@@ -6222,10 +6222,22 @@ tSCC zSun_Auth_ProtoSelect0[] =
  */
 tSCC zSun_Auth_ProtoBypass0[] =
        "__cplusplus";
+tSCC zSun_Auth_ProtoBypass1[] =
+       "pragma ident.*auth.*(1.4[3-9]|1.[5-9][0-9]).*SMI";
+tSCC zSun_Auth_ProtoBypass2[] =
+       "pragma ident.*clnt.*1.[6-9][0-9].*SMI";
+tSCC zSun_Auth_ProtoBypass3[] =
+       "pragma ident.*svc.*(1.69|1.[7-9][0-9]).*SMI";
+tSCC zSun_Auth_ProtoBypass4[] =
+       "pragma ident.*xdr.*(1.4[5-9]|1.[5-9][0-9]).*SMI";
 
-#define    SUN_AUTH_PROTO_TEST_CT  2
+#define    SUN_AUTH_PROTO_TEST_CT  6
 static tTestDesc aSun_Auth_ProtoTests[] = {
   { TT_NEGREP,   zSun_Auth_ProtoBypass0, (regex_t*)NULL },
+  { TT_NEGREP,   zSun_Auth_ProtoBypass1, (regex_t*)NULL },
+  { TT_NEGREP,   zSun_Auth_ProtoBypass2, (regex_t*)NULL },
+  { TT_NEGREP,   zSun_Auth_ProtoBypass3, (regex_t*)NULL },
+  { TT_NEGREP,   zSun_Auth_ProtoBypass4, (regex_t*)NULL },
   { TT_EGREP,    zSun_Auth_ProtoSelect0, (regex_t*)NULL }, };
 
 /*
@@ -7308,7 +7320,7 @@ static const char* apzX11_SprintfPatch[]
  *
  *  List of all fixes
  */
-#define REGEX_COUNT          226
+#define REGEX_COUNT          230
 #define MACH_LIST_SIZE_LIMIT 181
 #define FIX_COUNT            180
 
Index: gcc-4.4.4/fixincludes/inclhack.def
===================================================================
--- gcc-4.4.4/fixincludes/inclhack.def
+++ gcc-4.4.4/fixincludes/inclhack.def
@@ -3346,6 +3346,21 @@ fix = {
      */
     select    = '\(\*[a-z][a-z_]*\)\(\)';
 
+    /* Solaris 2.8 and above (and perhaps earlier versions) do not
+       need these fixes.  The unprototyped declarations in these files
+       are only visible if __STDC__ is not defined.  This test looks
+       for a #pragma ident directives with particular versions, since
+       we know those versions are OK.  (Earlier versions may also be
+       OK, but we do not know that.)  */
+    /* For rpc/auth.h, 1.43 or better is OK.  */
+    bypass    = "pragma ident.*auth.*(1\.4[3-9]|1\.[5-9][0-9]).*SMI";
+    /* For rpc/clnt.h, 1.60 or better is OK.  */
+    bypass    = "pragma ident.*clnt.*1\.[6-9][0-9].*SMI";
+    /* For rpc/svc.h, 1.69 or better is OK.  */
+    bypass    = "pragma ident.*svc.*(1\.69|1\.[7-9][0-9]).*SMI";
+    /* For rpc/xdr.h, 1.45 or better is OK.  */
+    bypass    = "pragma ident.*xdr.*(1\.4[5-9]|1\.[5-9][0-9]).*SMI";
+
     c_fix     = format;
     c_fix_arg = "#ifdef __cplusplus\n%1(...);%2\n"
                 "#else\n%1();%2\n#endif";
Index: gcc-4.4.4/gcc/ChangeLog
===================================================================
--- gcc-4.4.4/gcc/ChangeLog
+++ gcc-4.4.4/gcc/ChangeLog
@@ -1,3 +1,25 @@
+2009-10-09  Neil Vachharajani <nvachhar@google.com>
+
+	* doc/cpp.texi (Other Directives): Do not list #ident and #sccs as
+	deprecated.
+
+2010-05-12  Jakub Jelinek  <jakub@redhat.com>
+
+	PR debug/42278
+	* dwarf2out.c (base_type_die): Don't add name attribute here.
+	(modified_type_die): Instead of sizetype use
+	its underlying original type.  If a DW_TAG_base_type doesn't
+	have name added, add __unknown__.
+	(dwarf2out_imported_module_or_decl_1): Don't call base_type_die,
+	always call force_type_die instead.
+
+2010-03-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* configure.ac (gcc_cv_as_cfi_directive) [i?86-*-solaris*]:
+	Disable cfi directives unless GCC and gas agree on using read-only
+	.eh_frame sections for 64-bit.
+	* configure: Regenerate.
+
 2010-04-29  Release Manager
 
 	* GCC 4.4.4 released.
Index: gcc-4.4.4/gcc/Makefile.in
===================================================================
--- gcc-4.4.4/gcc/Makefile.in
+++ gcc-4.4.4/gcc/Makefile.in
@@ -4725,7 +4725,7 @@ update-po: $(CATALOGS:.gmo=.pox)
 # script does that.
 .po.gmo:
 	$(mkinstalldirs) po
-	$(GMSGFMT) --statistics -o $@ $<
+	$(GMSGFMT) -o $@ $<
 
 # The new .po has to be gone over by hand, so we deposit it into
 # build/po with a different extension.
Index: gcc-4.4.4/gcc/common.opt
===================================================================
--- gcc-4.4.4/gcc/common.opt
+++ gcc-4.4.4/gcc/common.opt
@@ -385,6 +385,10 @@ fconserve-stack
 Common Var(flag_conserve_stack) Optimization
 Do not perform optimizations increasing noticeably stack usage
 
+fconstant-pools
+Common Report Var(flag_constant_pools) Init(1)
+Put constants in pools in read-only memory if convenient
+
 fcprop-registers
 Common Report Var(flag_cprop_registers) Optimization
 Perform a register copy-propagation optimization pass
@@ -467,6 +471,10 @@ fearly-inlining
 Common Report Var(flag_early_inlining) Init(1) Optimization
 Perform early inlining
 
+fdwarf2-indirect-strings
+Common Report Var(flag_dwarf2_indirect_strings) Init(1)
+Enable use of indirect strings in DWARF2 debug info
+
 feliminate-dwarf2-dups
 Common Report Var(flag_eliminate_dwarf2_dups)
 Perform DWARF2 duplicate elimination
Index: gcc-4.4.4/gcc/config.gcc
===================================================================
--- gcc-4.4.4/gcc/config.gcc
+++ gcc-4.4.4/gcc/config.gcc
@@ -1224,6 +1224,8 @@ i[34567]86-*-solaris2*)
 	  "":*:yes | yes:*:yes )
 		thread_file=solaris
 		;;
+	*)
+		extra_parts="crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o"
 	esac
 	;;
 i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)
Index: gcc-4.4.4/gcc/config/i386/i386.c
===================================================================
--- gcc-4.4.4/gcc/config/i386/i386.c
+++ gcc-4.4.4/gcc/config/i386/i386.c
@@ -1654,10 +1654,14 @@ struct stack_local_entry GTY(())
 
    saved frame pointer if frame_pointer_needed
 					      <- HARD_FRAME_POINTER
-   [saved regs]
+   [-msave-args]
 
    [padding0]
 
+   [saved regs]
+
+   [padding05]
+
    [saved SSE regs]
 
    [padding1]          \
@@ -1670,8 +1674,10 @@ struct stack_local_entry GTY(())
   */
 struct ix86_frame
 {
+  int nmsave_args;
   int padding0;
   int nsseregs;
+  int padding05;
   int nregs;
   int padding1;
   int va_arg_size;
@@ -1762,6 +1768,8 @@ int internal_label_prefix_len;
 /* Fence to use after loop using movnt.  */
 tree x86_mfence;
 
+static int ix86_nsaved_args (void);
+
 /* Register class used for passing given 64bit part of the argument.
    These represent classes as documented by the PS ABI, with the exception
    of SSESF, SSEDF classes, that are basically SSE class, just gcc will
@@ -1819,6 +1827,8 @@ static bool ix86_valid_target_attribute_
 static bool ix86_can_inline_p (tree, tree);
 static void ix86_set_current_function (tree);
 
+static void pro_epilogue_adjust_stack (rtx, rtx, rtx, int);
+
 
 /* The svr4 ABI for the i386 says that records and unions are returned
    in memory.  */
@@ -2869,7 +2879,8 @@ override_options (bool main_args_p)
 	      error ("CPU you selected does not support x86-64 "
 		     "instruction set");
 	  }
-        /* Intel CPUs have always interpreted SSE prefetch instructions as
+
+	/* Intel CPUs have always interpreted SSE prefetch instructions as
 	   NOPs; so, we can enable SSE prefetch instructions even when
 	   -mtune (rather than -march) points us to a processor that has them.
 	   However, the VIA C3 gives a SIGILL, so we only do that for i686 and
@@ -3074,6 +3085,9 @@ override_options (bool main_args_p)
   if (TARGET_SSE4_2 || TARGET_ABM)
     ix86_isa_flags |= OPTION_MASK_ISA_POPCNT & ~ix86_isa_flags_explicit;
 
+  if (!TARGET_64BIT && TARGET_SAVE_ARGS)
+      error ("-msave-args makes no sense in the 32-bit mode");
+
   /* Validate -mpreferred-stack-boundary= value or default it to
      PREFERRED_STACK_BOUNDARY_DEFAULT.  */
   ix86_preferred_stack_boundary = PREFERRED_STACK_BOUNDARY_DEFAULT;
@@ -7344,8 +7358,8 @@ ix86_can_use_return_insn_p (void)
     return 0;
 
   ix86_compute_frame_layout (&frame);
-  return frame.to_allocate == 0 && frame.padding0 == 0
-         && (frame.nregs + frame.nsseregs) == 0;
+  return frame.to_allocate == 0 && frame.padding05 == 0 &&
+          frame.nmsave_args == 0 && (frame.nregs + frame.nsseregs) == 0;
 }
 
 /* Value should be nonzero if functions must have frame pointers.
@@ -7365,6 +7379,9 @@ ix86_frame_pointer_required (void)
   if (SUBTARGET_FRAME_POINTER_REQUIRED)
     return 1;
 
+  if (TARGET_SAVE_ARGS)
+    return 1;
+
   /* In override_options, TARGET_OMIT_LEAF_FRAME_POINTER turns off
      the frame pointer by default.  Turn it back on now if we've not
      got a leaf function.  */
@@ -7730,6 +7747,7 @@ ix86_compute_frame_layout (struct ix86_f
 
   frame->nregs = ix86_nsaved_regs ();
   frame->nsseregs = ix86_nsaved_sseregs ();
+  frame->nmsave_args = ix86_nsaved_args ();
   total_size = size;
 
   stack_alignment_needed = crtl->stack_alignment_needed / BITS_PER_UNIT;
@@ -7785,6 +7803,11 @@ ix86_compute_frame_layout (struct ix86_f
   else
     frame->save_regs_using_mov = false;
 
+  if (TARGET_SAVE_ARGS)
+    {
+      cfun->machine->use_fast_prologue_epilogue = true;
+      frame->save_regs_using_mov = true;
+    }
 
   /* Skip return address and saved base pointer.  */
   offset = frame_pointer_needed ? UNITS_PER_WORD * 2 : UNITS_PER_WORD;
@@ -7796,17 +7819,27 @@ ix86_compute_frame_layout (struct ix86_f
   if (stack_realign_fp)
     offset = (offset + stack_alignment_needed -1) & -stack_alignment_needed;
 
+  /* Argument save area */
+  if (TARGET_SAVE_ARGS)
+    {
+      offset += frame->nmsave_args * UNITS_PER_WORD;
+      frame->padding0 = (frame->nmsave_args % 2) * UNITS_PER_WORD;
+      offset += frame->padding0;
+    }
+  else
+    frame->padding0 = 0;
+
   /* Register save area */
   offset += frame->nregs * UNITS_PER_WORD;
 
   /* Align SSE reg save area.  */
   if (frame->nsseregs)
-    frame->padding0 = ((offset + 16 - 1) & -16) - offset;
+    frame->padding05 = ((offset + 16 - 1) & -16) - offset;
   else
-    frame->padding0 = 0;
+    frame->padding05 = 0;
   
   /* SSE register save area.  */
-  offset += frame->padding0 + frame->nsseregs * 16;
+  offset += frame->padding05 + frame->nsseregs * 16;
 
   /* Va-arg area */
   frame->va_arg_size = ix86_varargs_gpr_size + ix86_varargs_fpr_size;
@@ -7857,8 +7890,10 @@ ix86_compute_frame_layout (struct ix86_f
     (size + frame->padding1 + frame->padding2
      + frame->outgoing_arguments_size + frame->va_arg_size);
 
-  if ((!frame->to_allocate && frame->nregs <= 1)
-      || (TARGET_64BIT && frame->to_allocate >= (HOST_WIDE_INT) 0x80000000))
+  if (!TARGET_SAVE_ARGS
+      && ((!frame->to_allocate && frame->nregs <= 1)
+	  || (TARGET_64BIT
+	      && frame->to_allocate >= (HOST_WIDE_INT) 0x80000000)))
     frame->save_regs_using_mov = false;
 
   if (!TARGET_64BIT_MS_ABI && TARGET_RED_ZONE
@@ -7868,7 +7903,11 @@ ix86_compute_frame_layout (struct ix86_f
     {
       frame->red_zone_size = frame->to_allocate;
       if (frame->save_regs_using_mov)
-	frame->red_zone_size += frame->nregs * UNITS_PER_WORD;
+	{
+	  frame->red_zone_size
+	    += (frame->nregs + frame->nmsave_args) * UNITS_PER_WORD;
+	  frame->red_zone_size += frame->padding0;
+	}
       if (frame->red_zone_size > RED_ZONE_SIZE - RED_ZONE_RESERVE)
 	frame->red_zone_size = RED_ZONE_SIZE - RED_ZONE_RESERVE;
     }
@@ -7881,7 +7920,9 @@ ix86_compute_frame_layout (struct ix86_f
   fprintf (stderr, "size: %ld\n", (long)size);
   fprintf (stderr, "nregs: %ld\n", (long)frame->nregs);
   fprintf (stderr, "nsseregs: %ld\n", (long)frame->nsseregs);
+  fprintf (stderr, "nmsave_args: %ld\n", (long)frame->nmsave_args);
   fprintf (stderr, "padding0: %ld\n", (long)frame->padding0);
+  fprintf (stderr, "padding05: %ld\n", (long)frame->padding0);
   fprintf (stderr, "alignment1: %ld\n", (long)stack_alignment_needed);
   fprintf (stderr, "padding1: %ld\n", (long)frame->padding1);
   fprintf (stderr, "va_arg: %ld\n", (long)frame->va_arg_size);
@@ -7898,6 +7939,7 @@ ix86_compute_frame_layout (struct ix86_f
 #endif
 }
 
+
 /* Emit code to save registers in the prologue.  */
 
 static void
@@ -7906,6 +7948,22 @@ ix86_emit_save_regs (void)
   unsigned int regno;
   rtx insn;
 
+  if (TARGET_SAVE_ARGS)
+    {
+      int i;
+      int nsaved = ix86_nsaved_args ();
+      int start = cfun->returns_struct;
+      for (i = start; i < start + nsaved; i++)
+	{
+	  regno = x86_64_int_parameter_registers[i];
+	  insn = emit_insn (gen_push (gen_rtx_REG (Pmode, regno)));
+	  RTX_FRAME_RELATED_P (insn) = 1;
+	}
+      if (nsaved % 2 != 0)
+	pro_epilogue_adjust_stack (stack_pointer_rtx, stack_pointer_rtx,
+				   GEN_INT (-UNITS_PER_WORD), -1);
+    }
+
   for (regno = FIRST_PSEUDO_REGISTER - 1; regno-- > 0; )
     if (!SSE_REGNO_P (regno) && ix86_save_reg (regno, true))
       {
@@ -7931,6 +7989,24 @@ ix86_emit_save_regs_using_mov (rtx point
 	RTX_FRAME_RELATED_P (insn) = 1;
 	offset += UNITS_PER_WORD;
       }
+
+  if (TARGET_SAVE_ARGS)
+    {
+      int i;
+      int nsaved = ix86_nsaved_args ();
+      int start = cfun->returns_struct;
+      if (nsaved % 2 != 0)
+	offset += UNITS_PER_WORD;
+      for (i = start + nsaved - 1; i >= start; i--)
+	{
+	  regno = x86_64_int_parameter_registers[i];
+	  insn = emit_move_insn (adjust_address (gen_rtx_MEM (Pmode, pointer),
+						 Pmode, offset),
+				 gen_rtx_REG (Pmode, regno));
+	  RTX_FRAME_RELATED_P (insn) = 1;
+	  offset += UNITS_PER_WORD;
+	}
+    }
 }
 
 /* Emit code to save registers using MOV insns.  First register
@@ -8257,12 +8333,13 @@ ix86_expand_prologue (void)
       RTX_FRAME_RELATED_P (insn) = 1;
     }
 
-  allocate = frame.to_allocate + frame.nsseregs * 16 + frame.padding0;
+  allocate = frame.to_allocate + frame.nsseregs * 16 + frame.padding05;
 
   if (!frame.save_regs_using_mov)
     ix86_emit_save_regs ();
   else
-    allocate += frame.nregs * UNITS_PER_WORD;
+    allocate += (frame.nregs + frame.nmsave_args) * UNITS_PER_WORD
+      + frame.padding0;
 
   /* When using red zone we may start register saving before allocating
      the stack frame saving one cycle of the prologue. However I will
@@ -8275,7 +8352,8 @@ ix86_expand_prologue (void)
 				     && !crtl->stack_realign_needed) 
                                    ? hard_frame_pointer_rtx
 				   : stack_pointer_rtx,
-				   -frame.nregs * UNITS_PER_WORD);
+				   -(frame.nregs + frame.nmsave_args)
+                                   * UNITS_PER_WORD - frame.padding0);
 
   if (allocate == 0)
     ;
@@ -8329,16 +8407,20 @@ ix86_expand_prologue (void)
       && !(!TARGET_64BIT_MS_ABI && TARGET_RED_ZONE
          && (! TARGET_STACK_PROBE || allocate < CHECK_STACK_LIMIT)))
     {
-      if (!frame_pointer_needed
-	  || !(frame.to_allocate + frame.padding0)
-	  || crtl->stack_realign_needed)
+      if (!TARGET_SAVE_ARGS &&
+          (!frame_pointer_needed
+           || !(frame.to_allocate + frame.padding05)
+           || crtl->stack_realign_needed))
         ix86_emit_save_regs_using_mov (stack_pointer_rtx,
 				       frame.to_allocate
-				       + frame.nsseregs * 16 + frame.padding0);
+				       + frame.nsseregs * 16 + frame.padding05);
       else
+        /* XXX: Does this need help for SSE? */
         ix86_emit_save_regs_using_mov (hard_frame_pointer_rtx,
-				       -frame.nregs * UNITS_PER_WORD);
+				       -(frame.nregs + frame.nmsave_args)
+                                       * UNITS_PER_WORD - frame.padding0);
     }
+  /* XXX: Does these need help for save-args? */
   if (!frame_pointer_needed
       || !(frame.to_allocate + frame.padding0)
       || crtl->stack_realign_needed)
@@ -8348,7 +8430,7 @@ ix86_expand_prologue (void)
     ix86_emit_save_sse_regs_using_mov (hard_frame_pointer_rtx,
 				       - frame.nregs * UNITS_PER_WORD
 				       - frame.nsseregs * 16
-				       - frame.padding0);
+				       - frame.padding05);
 
   pic_reg_used = false;
   if (pic_offset_table_rtx
@@ -8507,11 +8589,11 @@ ix86_expand_epilogue (int style)
      must be taken for the normal return case of a function using
      eh_return: the eax and edx registers are marked as saved, but not
      restored along this path.  */
-  offset = frame.nregs;
+  offset = frame.nregs + frame.nmsave_args;
   if (crtl->calls_eh_return && style != 2)
     offset -= 2;
   offset *= -UNITS_PER_WORD;
-  offset -= frame.nsseregs * 16 + frame.padding0;
+  offset -= frame.nsseregs * 16 + frame.padding05 + frame.padding0;
 
   /* If we're only restoring one register and sp is not valid then
      using a move instruction to restore the register since it's
@@ -8553,7 +8635,7 @@ ix86_expand_epilogue (int style)
 	  ix86_emit_restore_regs_using_mov (stack_pointer_rtx,
 					    frame.to_allocate
 					    + frame.nsseregs * 16
-					    + frame.padding0, style == 2);
+					    + frame.padding05, style == 2);
 	}
       else
         {
@@ -8562,7 +8644,7 @@ ix86_expand_epilogue (int style)
 	  ix86_emit_restore_regs_using_mov (hard_frame_pointer_rtx,
 					    offset
 					    + frame.nsseregs * 16
-					    + frame.padding0, style == 2);
+					    + frame.padding05, style == 2);
         }
 
       /* eh_return epilogues need %ecx added to the stack pointer.  */
@@ -8589,18 +8671,20 @@ ix86_expand_epilogue (int style)
 	    {
 	      tmp = gen_rtx_PLUS (Pmode, stack_pointer_rtx, sa);
 	      tmp = plus_constant (tmp, (frame.to_allocate
-                                         + frame.nregs * UNITS_PER_WORD
+                                         + (frame.nregs + frame.nmsave_args)
+                                           * UNITS_PER_WORD
 					 + frame.nsseregs * 16
-					 + frame.padding0));
+					 + frame.padding05 + frame.padding0));
 	      emit_insn (gen_rtx_SET (VOIDmode, stack_pointer_rtx, tmp));
 	    }
 	}
       else if (!frame_pointer_needed)
 	pro_epilogue_adjust_stack (stack_pointer_rtx, stack_pointer_rtx,
 				   GEN_INT (frame.to_allocate
-					    + frame.nregs * UNITS_PER_WORD
+					    + (frame.nregs + frame.nmsave_args)
+                                              * UNITS_PER_WORD
 					    + frame.nsseregs * 16
-					    + frame.padding0),
+					    + frame.padding05 + frame.padding0),
 				   style);
       /* If not an i386, mov & pop is faster than "leave".  */
       else if (TARGET_USE_LEAVE || optimize_function_for_size_p (cfun)
@@ -8645,12 +8729,17 @@ ix86_expand_epilogue (int style)
 	  pro_epilogue_adjust_stack (stack_pointer_rtx, stack_pointer_rtx,
 				     GEN_INT (frame.to_allocate
 				     	      + frame.nsseregs * 16
-					      + frame.padding0), style);
+					      + frame.padding05), style);
 	}
 
       for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)
 	if (!SSE_REGNO_P (regno) && ix86_save_reg (regno, false))
 	  emit_insn ((*ix86_gen_pop1) (gen_rtx_REG (Pmode, regno)));
+
+      /* XXX: Needs adjustment for SSE regs? */
+      pro_epilogue_adjust_stack (stack_pointer_rtx, stack_pointer_rtx,
+				 GEN_INT (frame.nmsave_args * UNITS_PER_WORD
+					  + frame.padding0), style);
       if (frame_pointer_needed)
 	{
 	  /* Leave results in shorter dependency chains on CPUs that are
@@ -9078,10 +9167,21 @@ constant_address_p (rtx x)
   return CONSTANT_P (x) && legitimate_address_p (Pmode, x, 1);
 }
 
+/* Return number of arguments to be saved on the stack with
+   -msave-args.  */
+
+static int
+ix86_nsaved_args (void)
+{
+  if (TARGET_SAVE_ARGS)
+    return crtl->args.info.regno - cfun->returns_struct;
+  else
+    return 0;
+}
+
 /* Nonzero if the constant value X is a legitimate general operand
    when generating PIC code.  It is given that flag_pic is on and
    that X satisfies CONSTANT_P or is a CONST_DOUBLE.  */
-
 bool
 legitimate_pic_operand_p (rtx x)
 {
Index: gcc-4.4.4/gcc/config/i386/i386.opt
===================================================================
--- gcc-4.4.4/gcc/config/i386/i386.opt
+++ gcc-4.4.4/gcc/config/i386/i386.opt
@@ -224,6 +224,10 @@ mtls-direct-seg-refs
 Target Report Mask(TLS_DIRECT_SEG_REFS)
 Use direct references against %gs when accessing tls data
 
+msave-args
+Target Report Mask(SAVE_ARGS)
+Save integer arguments on the stack at function entry
+
 mtune=
 Target RejectNegative Joined Var(ix86_tune_string)
 Schedule code for given CPU
Index: gcc-4.4.4/gcc/config/i386/sol2-10.h
===================================================================
--- gcc-4.4.4/gcc/config/i386/sol2-10.h
+++ gcc-4.4.4/gcc/config/i386/sol2-10.h
@@ -93,12 +93,12 @@ along with GCC; see the file COPYING3.  
    %{YP,*} \
    %{R*} \
    %{compat-bsd: \
-     %{!YP,*:%{p|pg:-Y P,/usr/ucblib/64:/usr/lib/libp/64:/lib/64:/usr/lib/64} \
-             %{!p:%{!pg:-Y P,/usr/ucblib/64:/lib:/usr/lib/64}}} \
-             -R /usr/ucblib/64} \
+     %{!YP,*:%{p|pg:-Y P,/usr/ucblib/64:/usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /usr/ucblib/64:/usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64} \
+             %{!p:%{!pg:-Y P,/usr/ucblib/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /usr/ucblib/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64}}} \
+             } \
    %{!compat-bsd: \
-     %{!YP,*:%{p|pg:-Y P,/usr/lib/libp/64:/lib/64:/usr/lib/64} \
-             %{!p:%{!pg:-Y P,/lib/64:/usr/lib/64}}}}"
+     %{!YP,*:%{p|pg:-Y P,/usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64} \
+             %{!p:%{!pg:-Y P,/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64}}}}"
 
 #undef LINK_ARCH64_SPEC
 #define LINK_ARCH64_SPEC LINK_ARCH64_SPEC_BASE
Index: gcc-4.4.4/gcc/config/sol2-c.c
===================================================================
--- gcc-4.4.4/gcc/config/sol2-c.c
+++ gcc-4.4.4/gcc/config/sol2-c.c
@@ -90,7 +90,7 @@ solaris_pragma_align (cpp_reader *pfile 
   if (pragma_lex (&x) != CPP_NUMBER
       || pragma_lex (&t) != CPP_OPEN_PAREN)
     {
-      warning (0, "malformed %<#pragma align%>, ignoring");
+      warning (0, "malformed '#pragma align', ignoring");
       return;
     }
 
@@ -99,14 +99,14 @@ solaris_pragma_align (cpp_reader *pfile 
       || (low != 1 && low != 2 && low != 4 && low != 8 && low != 16
 	  && low != 32 && low != 64 && low != 128))
     {
-      warning (0, "invalid alignment for %<#pragma align%>, ignoring");
+      warning (0, "invalid alignment for '#pragma align', ignoring");
       return;
     }
 
   ttype = pragma_lex (&t);
   if (ttype != CPP_NAME)
     {
-      warning (0, "malformed %<#pragma align%>, ignoring");
+      warning (0, "malformed '#pragma align', ignoring");
       return;
     }
 
@@ -114,8 +114,9 @@ solaris_pragma_align (cpp_reader *pfile 
     {
       tree decl = identifier_global_value (t);
       if (decl && DECL_P (decl))
-	warning (0, "%<#pragma align%> must appear before the declaration of "
-		 "%D, ignoring", decl);
+	decl_attributes (&decl, build_tree_list (get_identifier ("aligned"),
+						   build_tree_list (NULL, x)),
+			   0);
       else
 	solaris_pending_aligns = tree_cons (t, build_tree_list (NULL, x),
 					    solaris_pending_aligns);
@@ -126,19 +127,19 @@ solaris_pragma_align (cpp_reader *pfile 
 	  ttype = pragma_lex (&t);
 	  if (ttype != CPP_NAME)
 	    {
-	      warning (0, "malformed %<#pragma align%>");
+	      warning (0, "malformed '#pragma align'");
 	      return;
 	    }
 	}
       else if (ttype == CPP_CLOSE_PAREN)
 	{
 	  if (pragma_lex (&t) != CPP_EOF)
-	    warning (0, "junk at end of %<#pragma align%>");
+	    warning (0, "junk at end of '#pragma align'");
 	  return;
 	}
       else
 	{
-	  warning (0, "malformed %<#pragma align%>");
+	  warning (0, "malformed '#pragma align'");
 	  return;
 	}
     }
@@ -154,21 +155,21 @@ solaris_pragma_init (cpp_reader *pfile A
 
   if (pragma_lex (&t) != CPP_OPEN_PAREN)
     {
-      warning (0, "malformed %<#pragma init%>, ignoring");
+      warning (0, "malformed '#pragma init', ignoring");
       return;
     }
 
   ttype = pragma_lex (&t);
   if (ttype != CPP_NAME)
     {
-      warning (0, "malformed %<#pragma init%>, ignoring");
+      warning (0, "malformed '#pragma init', ignoring");
       return;
     }
 
   while (1)
     {
       tree decl = identifier_global_value (t);
-      if (decl && DECL_P (decl))
+      if (decl && TREE_CODE_CLASS (TREE_CODE (decl)) == 'd')
 	{
 	  tree init_list = build_tree_list (get_identifier ("init"),
 					    NULL);
@@ -184,19 +185,19 @@ solaris_pragma_init (cpp_reader *pfile A
 	  ttype = pragma_lex (&t);
 	  if (ttype != CPP_NAME)
 	    {
-	      warning (0, "malformed %<#pragma init%>");
+	      warning (0, "malformed '#pragma init'");
 	      return;
 	    }
 	}
       else if (ttype == CPP_CLOSE_PAREN)
 	{
 	  if (pragma_lex (&t) != CPP_EOF)
-	    warning (0, "junk at end of %<#pragma init%>");
+	    warning (0, "junk at end of '#pragma init'");
 	  return;
 	}
       else
 	{
-	  warning (0, "malformed %<#pragma init%>");
+	  warning (0, "malformed '#pragma init'");
 	  return;
 	}
     }
@@ -212,21 +213,21 @@ solaris_pragma_fini (cpp_reader *pfile A
 
   if (pragma_lex (&t) != CPP_OPEN_PAREN)
     {
-      warning (0, "malformed %<#pragma fini%>, ignoring");
+      warning (0, "malformed '#pragma fini', ignoring");
       return;
     }
 
   ttype = pragma_lex (&t);
   if (ttype != CPP_NAME)
     {
-      warning (0, "malformed %<#pragma fini%>, ignoring");
+      warning (0, "malformed '#pragma fini', ignoring");
       return;
     }
 
   while (1)
     {
       tree decl = identifier_global_value (t);
-      if (decl && DECL_P (decl))
+      if (decl && TREE_CODE_CLASS (TREE_CODE (decl)) == 'd')
 	{
 	  tree fini_list = build_tree_list (get_identifier ("fini"),
 					    NULL);
@@ -242,19 +243,19 @@ solaris_pragma_fini (cpp_reader *pfile A
 	  ttype = pragma_lex (&t);
 	  if (ttype != CPP_NAME)
 	    {
-	      warning (0, "malformed %<#pragma fini%>");
+	      warning (0, "malformed '#pragma fini'");
 	      return;
 	    }
 	}
       else if (ttype == CPP_CLOSE_PAREN)
 	{
 	  if (pragma_lex (&t) != CPP_EOF)
-	    warning (0, "junk at end of %<#pragma fini%>");
+	    warning (0, "junk at end of '#pragma fini'");
 	  return;
 	}
       else
 	{
-	  warning (0, "malformed %<#pragma fini%>");
+	  warning (0, "malformed '#pragma fini'");
 	  return;
 	}
     }
Index: gcc-4.4.4/gcc/config/sol2.c
===================================================================
--- gcc-4.4.4/gcc/config/sol2.c
+++ gcc-4.4.4/gcc/config/sol2.c
@@ -50,8 +50,8 @@ solaris_insert_attributes (tree decl, tr
 	  {
 	    if (lookup_attribute ("aligned", DECL_ATTRIBUTES (decl))
 		|| lookup_attribute ("aligned", *attributes))
-	      warning (0, "ignoring %<#pragma align%> for explicitly "
-		       "aligned %q+D", decl);
+	      warning (0, "%Jignoring '#pragma align' for explicitly "
+		       "aligned '%D'", decl, decl);
 	    else
 	      *attributes = tree_cons (get_identifier ("aligned"), value,
 				       *attributes);
Index: gcc-4.4.4/gcc/config/sol2.h
===================================================================
--- gcc-4.4.4/gcc/config/sol2.h
+++ gcc-4.4.4/gcc/config/sol2.h
@@ -123,12 +123,12 @@ along with GCC; see the file COPYING3.  
    %{YP,*} \
    %{R*} \
    %{compat-bsd: \
-     %{!YP,*:%{p|pg:-Y P,/usr/ucblib:/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \
-             %{!p:%{!pg:-Y P,/usr/ucblib:/usr/ccs/lib:/usr/lib}}} \
-             -R /usr/ucblib} \
+     %{!YP,*:%{p|pg:-Y P,/usr/ucblib:/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib -R /usr/ucblib:/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib} \
+             %{!p:%{!pg:-Y P,/usr/ucblib:/usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib -R /usr/ucblib:/usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib}}} \
+             } \
    %{!compat-bsd: \
-     %{!YP,*:%{p|pg:-Y P,/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \
-             %{!p:%{!pg:-Y P,/usr/ccs/lib:/usr/lib}}}}"
+     %{!YP,*:%{p|pg:-Y P,/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib -R /usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib} \
+             %{!p:%{!pg:-Y P,/usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib -R /usr/ccs/lib:/lib:/usr/lib:/usr/gnu/lib:/usr/gcc/4.4/lib}}}}"
 
 #undef LINK_ARCH32_SPEC
 #define LINK_ARCH32_SPEC LINK_ARCH32_SPEC_BASE
Index: gcc-4.4.4/gcc/config/sparc/sol2-bi.h
===================================================================
--- gcc-4.4.4/gcc/config/sparc/sol2-bi.h
+++ gcc-4.4.4/gcc/config/sparc/sol2-bi.h
@@ -172,12 +172,12 @@
    %{YP,*} \
    %{R*} \
    %{compat-bsd: \
-     %{!YP,*:%{p|pg:-Y P,/usr/ucblib/sparcv9:/usr/lib/libp/sparcv9:/usr/lib/sparcv9} \
-       %{!p:%{!pg:-Y P,/usr/ucblib/sparcv9:/usr/lib/sparcv9}}} \
-     -R /usr/ucblib/sparcv9} \
+     %{!YP,*:%{p|pg:-Y P,/usr/ucblib/64:/usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /usr/ucblib/64:/usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64} \
+       %{!p:%{!pg:-Y P,/usr/ucblib/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /usr/ucblib/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64}}} \
+     } \
    %{!compat-bsd: \
-     %{!YP,*:%{p|pg:-Y P,/usr/lib/libp/sparcv9:/usr/lib/sparcv9} \
-       %{!p:%{!pg:-Y P,/usr/lib/sparcv9}}}}"
+     %{!YP,*:%{p|pg:-Y P,/usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /usr/lib/libp/64:/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64} \
+       %{!p:%{!pg:-Y P,/lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64 -R /lib/64:/usr/lib/64:/usr/gnu/lib/64:/usr/gcc/4.4/lib/64}}}}"
 
 #define LINK_ARCH64_SPEC LINK_ARCH64_SPEC_BASE
 
Index: gcc-4.4.4/gcc/config/sparc/sparc.c
===================================================================
--- gcc-4.4.4/gcc/config/sparc/sparc.c
+++ gcc-4.4.4/gcc/config/sparc/sparc.c
@@ -2989,6 +2989,9 @@ legitimate_address_p (enum machine_mode 
 	  if (TARGET_ARCH32 && !optimize
 	      && (mode == DFmode || mode == DImode))
 	    return 0;
+          if (TARGET_ARCH32 && TARGET_NO_INTEGER_LDD_STD
+              && mode == DImode)
+              return 0;
 	}
       else if (USE_AS_OFFSETABLE_LO10
 	       && GET_CODE (rs1) == LO_SUM
@@ -6577,7 +6580,8 @@ sparc_splitdi_legitimate (rtx reg, rtx m
 
   /* If we have legitimate args for ldd/std, we do not want
      the split to happen.  */
-  if ((REGNO (reg) % 2) == 0
+  if (!TARGET_NO_INTEGER_LDD_STD
+      && (REGNO (reg) % 2) == 0
       && mem_min_alignment (mem, 8))
     return 0;
 
Index: gcc-4.4.4/gcc/config/sparc/sparc.md
===================================================================
--- gcc-4.4.4/gcc/config/sparc/sparc.md
+++ gcc-4.4.4/gcc/config/sparc/sparc.md
@@ -1959,7 +1959,7 @@
 				"=o,T,U,o,r,r,r,?T,?f,?f,?o,?f")
         (match_operand:DI 1 "input_operand"
 				" J,U,T,r,o,i,r, f, T, o, f, f"))]
-  "! TARGET_V9
+  "! TARGET_V9 && ! TARGET_NO_INTEGER_LDD_STD
    && (register_operand (operands[0], DImode)
        || register_or_zero_operand (operands[1], DImode))"
   "@
@@ -1978,12 +1978,36 @@
   [(set_attr "type" "store,store,load,*,*,*,*,fpstore,fpload,*,*,*")
    (set_attr "length" "2,*,*,2,2,2,2,*,*,2,2,2")])
 
+(define_insn "*movdi_insn_sp32_nolddstd"
+  [(set (match_operand:DI 0 "nonimmediate_operand"
+				"=o,T,U,o,r,r,r,?T,?f,?f,?o,?f")
+        (match_operand:DI 1 "input_operand"
+				" J,U,T,r,o,i,r, f, T, o, f, f"))]
+  "! TARGET_V9 && TARGET_NO_INTEGER_LDD_STD
+   && (register_operand (operands[0], DImode)
+       || register_or_zero_operand (operands[1], DImode))"
+  "@
+   #
+   #
+   #
+   #
+   #
+   #
+   #
+   std\t%1, %0
+   ldd\t%1, %0
+   #
+   #
+   #"
+  [(set_attr "type" "store,store,load,*,*,*,*,fpstore,fpload,*,*,*")
+   (set_attr "length" "2,2,2,2,2,2,2,*,*,2,2,2")])
+
 (define_insn "*movdi_insn_sp32_v9"
   [(set (match_operand:DI 0 "nonimmediate_operand"
 					"=T,o,T,U,o,r,r,r,?T,?f,?f,?o,?e,?e,?W")
         (match_operand:DI 1 "input_operand"
 					" J,J,U,T,r,o,i,r, f, T, o, f, e, W, e"))]
-  "! TARGET_ARCH64
+  "! TARGET_ARCH64 && ! TARGET_NO_INTEGER_LDD_STD
    && TARGET_V9
    && (register_operand (operands[0], DImode)
        || register_or_zero_operand (operands[1], DImode))"
@@ -2007,6 +2031,35 @@
    (set_attr "length" "*,2,*,*,2,2,2,2,*,*,2,2,*,*,*")
    (set_attr "fptype" "*,*,*,*,*,*,*,*,*,*,*,*,double,*,*")])
 
+
+(define_insn "*movdi_insn_sp32_v9_nolddstd"
+  [(set (match_operand:DI 0 "nonimmediate_operand"
+					"=T,o,T,U,o,r,r,r,?T,?f,?f,?o,?e,?e,?W")
+        (match_operand:DI 1 "input_operand"
+					" J,J,U,T,r,o,i,r, f, T, o, f, e, W, e"))]
+  "! TARGET_ARCH64 && TARGET_V9 && TARGET_NO_INTEGER_LDD_STD
+   && (register_operand (operands[0], DImode)
+       || register_or_zero_operand (operands[1], DImode))"
+  "@
+   stx\t%%g0, %0
+   #
+   #
+   #
+   #
+   #
+   #
+   #
+   std\t%1, %0
+   ldd\t%1, %0
+   #
+   #
+   fmovd\\t%1, %0
+   ldd\\t%1, %0
+   std\\t%1, %0"
+  [(set_attr "type" "store,store,store,load,*,*,*,*,fpstore,fpload,*,*,fpmove,fpload,fpstore")
+   (set_attr "length" "*,2,2,2,2,2,2,2,*,*,2,2,*,*,*")
+   (set_attr "fptype" "*,*,*,*,*,*,*,*,*,*,*,*,double,*,*")])
+
 (define_insn "*movdi_insn_sp64"
   [(set (match_operand:DI 0 "nonimmediate_operand" "=r,r,r,m,?e,?e,?W,b")
         (match_operand:DI 1 "input_operand"   "rI,N,m,rJ,e,W,e,J"))]
@@ -7196,7 +7249,7 @@
       (const_int 0))
    (set (match_operand:SI 1 "memory_operand" "")
       (const_int 0))]
-  "TARGET_V9
+  "TARGET_V9 && ! TARGET_NO_INTEGER_LDD_STD
    && mems_ok_for_ldd_peep (operands[0], operands[1], NULL_RTX)"
   [(set (match_dup 0)
        (const_int 0))]
@@ -7207,7 +7260,7 @@
       (const_int 0))
    (set (match_operand:SI 1 "memory_operand" "")
       (const_int 0))]
-  "TARGET_V9
+  "TARGET_V9 && ! TARGET_NO_INTEGER_LDD_STD
    && mems_ok_for_ldd_peep (operands[1], operands[0], NULL_RTX)"
   [(set (match_dup 1)
        (const_int 0))]
@@ -7218,7 +7271,8 @@
         (match_operand:SI 1 "memory_operand" ""))
    (set (match_operand:SI 2 "register_operand" "")
         (match_operand:SI 3 "memory_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[0], operands[2]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+   && registers_ok_for_ldd_peep (operands[0], operands[2])
    && mems_ok_for_ldd_peep (operands[1], operands[3], operands[0])" 
   [(set (match_dup 0)
 	(match_dup 1))]
@@ -7230,7 +7284,8 @@
         (match_operand:SI 1 "register_operand" ""))
    (set (match_operand:SI 2 "memory_operand" "")
         (match_operand:SI 3 "register_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[1], operands[3]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+   && registers_ok_for_ldd_peep (operands[1], operands[3])
    && mems_ok_for_ldd_peep (operands[0], operands[2], NULL_RTX)"
   [(set (match_dup 0)
 	(match_dup 1))]
@@ -7242,7 +7297,8 @@
         (match_operand:SF 1 "memory_operand" ""))
    (set (match_operand:SF 2 "register_operand" "")
         (match_operand:SF 3 "memory_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[0], operands[2]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+   && registers_ok_for_ldd_peep (operands[0], operands[2])
    && mems_ok_for_ldd_peep (operands[1], operands[3], operands[0])"
   [(set (match_dup 0)
 	(match_dup 1))]
@@ -7254,7 +7310,8 @@
         (match_operand:SF 1 "register_operand" ""))
    (set (match_operand:SF 2 "memory_operand" "")
         (match_operand:SF 3 "register_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[1], operands[3]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+  && registers_ok_for_ldd_peep (operands[1], operands[3])
   && mems_ok_for_ldd_peep (operands[0], operands[2], NULL_RTX)"
   [(set (match_dup 0)
 	(match_dup 1))]
@@ -7266,7 +7323,8 @@
         (match_operand:SI 1 "memory_operand" ""))
    (set (match_operand:SI 2 "register_operand" "")
         (match_operand:SI 3 "memory_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[2], operands[0]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+  && registers_ok_for_ldd_peep (operands[2], operands[0])
   && mems_ok_for_ldd_peep (operands[3], operands[1], operands[0])"
   [(set (match_dup 2)
 	(match_dup 3))]
@@ -7278,7 +7336,8 @@
         (match_operand:SI 1 "register_operand" ""))
    (set (match_operand:SI 2 "memory_operand" "")
         (match_operand:SI 3 "register_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[3], operands[1]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+  && registers_ok_for_ldd_peep (operands[3], operands[1])
   && mems_ok_for_ldd_peep (operands[2], operands[0], NULL_RTX)" 
   [(set (match_dup 2)
 	(match_dup 3))]
@@ -7291,7 +7350,8 @@
         (match_operand:SF 1 "memory_operand" ""))
    (set (match_operand:SF 2 "register_operand" "")
         (match_operand:SF 3 "memory_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[2], operands[0]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+  && registers_ok_for_ldd_peep (operands[2], operands[0])
   && mems_ok_for_ldd_peep (operands[3], operands[1], operands[0])"
   [(set (match_dup 2)
 	(match_dup 3))]
@@ -7303,7 +7363,8 @@
         (match_operand:SF 1 "register_operand" ""))
    (set (match_operand:SF 2 "memory_operand" "")
         (match_operand:SF 3 "register_operand" ""))]
-  "registers_ok_for_ldd_peep (operands[3], operands[1]) 
+  "! TARGET_NO_INTEGER_LDD_STD
+  && registers_ok_for_ldd_peep (operands[3], operands[1])
   && mems_ok_for_ldd_peep (operands[2], operands[0], NULL_RTX)"
   [(set (match_dup 2)
 	(match_dup 3))]
Index: gcc-4.4.4/gcc/config/sparc/sparc.opt
===================================================================
--- gcc-4.4.4/gcc/config/sparc/sparc.opt
+++ gcc-4.4.4/gcc/config/sparc/sparc.opt
@@ -38,6 +38,10 @@ mimpure-text
 Target Report
 Pass -assert pure-text to linker
 
+mno-integer-ldd-std
+Target Report RejectNegative Mask(NO_INTEGER_LDD_STD)
+Utilize integer ldd and std
+
 mapp-regs
 Target Report Mask(APP_REGS)
 Use ABI reserved registers
Index: gcc-4.4.4/gcc/configure
===================================================================
--- gcc-4.4.4/gcc/configure
+++ gcc-4.4.4/gcc/configure
@@ -21572,7 +21572,23 @@ else
 		sed -e /.eh_frame/!d -e N | grep READONLY > /dev/null; then
 	  gcc_cv_as_cfi_directive=no
 	else
-	  gcc_cv_as_cfi_directive=yes
+	  case "$target" in
+	    i?86-*-solaris2.1[0-9]*)
+	      # On Solaris/x86, make sure that GCC and gas agree on using
+	      # read-only .eh_frame sections for 64-bit.
+	      if $gcc_cv_as --64 -o conftest.o conftest.s > /dev/null 2>&1 && \
+		$gcc_cv_objdump -h conftest.o 2>/dev/null | \
+			sed -e /.eh_frame/!d -e N | \
+			grep READONLY > /dev/null; then
+		gcc_cv_as_cfi_directive=yes
+	      else
+		gcc_cv_as_cfi_directive=no
+	      fi
+	      ;;
+	    *)
+	      gcc_cv_as_cfi_directive=yes
+	      ;;
+	  esac
 	fi
       else
         # no objdump, err on the side of caution
Index: gcc-4.4.4/gcc/configure.ac
===================================================================
--- gcc-4.4.4/gcc/configure.ac
+++ gcc-4.4.4/gcc/configure.ac
@@ -2246,7 +2246,23 @@ gcc_GAS_CHECK_FEATURE([cfi directives], 
 		sed -e /.eh_frame/!d -e N | grep READONLY > /dev/null; then
 	  gcc_cv_as_cfi_directive=no
 	else
-	  gcc_cv_as_cfi_directive=yes
+	  case "$target" in
+	    i?86-*-solaris2.1[[0-9]]*)
+	      # On Solaris/x86, make sure that GCC and gas agree on using
+	      # read-only .eh_frame sections for 64-bit.
+	      if $gcc_cv_as --64 -o conftest.o conftest.s > /dev/null 2>&1 && \
+		$gcc_cv_objdump -h conftest.o 2>/dev/null | \
+			sed -e /.eh_frame/!d -e N | \
+			grep READONLY > /dev/null; then
+		gcc_cv_as_cfi_directive=yes
+	      else
+		gcc_cv_as_cfi_directive=no
+	      fi
+	      ;;
+	    *)
+	      gcc_cv_as_cfi_directive=yes
+	      ;;
+	  esac
 	fi
       else
         # no objdump, err on the side of caution
Index: gcc-4.4.4/gcc/cp/Make-lang.in
===================================================================
--- gcc-4.4.4/gcc/cp/Make-lang.in
+++ gcc-4.4.4/gcc/cp/Make-lang.in
@@ -55,7 +55,7 @@ c++: cc1plus$(exeext)
 g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) $(CONFIG_H)
 	(SHLIB_LINK='$(SHLIB_LINK)'; \
 	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \
-		$(INCLUDES) $(srcdir)/cp/g++spec.c)
+		-DLIBDIR=\"$(libdir)\" $(INCLUDES) $(srcdir)/cp/g++spec.c)
 
 # Create the compiler driver for g++.
 GXX_OBJS = $(GCC_OBJS) g++spec.o intl.o prefix.o version.o
Index: gcc-4.4.4/gcc/cp/g++spec.c
===================================================================
--- gcc-4.4.4/gcc/cp/g++spec.c
+++ gcc-4.4.4/gcc/cp/g++spec.c
@@ -60,6 +60,9 @@ lang_specific_driver (int *in_argc, cons
   /* If nonzero, the user gave us the `-v' flag.  */
   int saw_verbose_flag = 0;
 
+  /* If nonzero, the user gave us the '-m64' flag.  */
+  int saw_m64_flag = 0;
+
   /* This is a tristate:
      -1 means we should not link in libstdc++
      0  means we should link in libstdc++ if it is needed
@@ -205,6 +208,10 @@ lang_specific_driver (int *in_argc, cons
 	    shared_libgcc = 0;
 	  else if (DEFAULT_WORD_SWITCH_TAKES_ARG (&argv[i][1]))
 	    i++;
+	  else if (strcmp (argv[i], "-m64") == 0)
+	    saw_m64_flag = 1;
+	  else if (strcmp (argv[i], "-m32") == 0)
+	    saw_m64_flag = 0;
 	  else
 	    /* Pass other options through.  */
 	    continue;
@@ -260,7 +267,7 @@ lang_specific_driver (int *in_argc, cons
 #endif
 
   /* Make sure to have room for the trailing NULL argument.  */
-  num_args = argc + added + need_math + shared_libgcc + (library > 0) + 1;
+  num_args = argc + added + need_math + shared_libgcc + 2 * (library > 0) + 1;
   arglist = XNEWVEC (const char *, num_args);
 
   i = 0;
Index: gcc-4.4.4/gcc/doc/cpp.texi
===================================================================
--- gcc-4.4.4/gcc/doc/cpp.texi
+++ gcc-4.4.4/gcc/doc/cpp.texi
@@ -3508,8 +3508,6 @@ These directives are not part of the C s
 official GNU extensions either.  What historical information we have
 been able to find, suggests they originated with System V@.
 
-Both @samp{#ident} and @samp{#sccs} are deprecated extensions.
-
 @cindex null directive
 The @dfn{null directive} consists of a @samp{#} followed by a newline,
 with only whitespace (including comments) in between.  A null directive
Index: gcc-4.4.4/gcc/doc/invoke.texi
===================================================================
--- gcc-4.4.4/gcc/doc/invoke.texi
+++ gcc-4.4.4/gcc/doc/invoke.texi
@@ -301,6 +301,7 @@ Objective-C and Objective-C++ Dialects}.
 -ftree-vectorizer-verbose=@var{n} @gol
 -fdump-tree-storeccp@r{[}-@var{n}@r{]} @gol
 -feliminate-dwarf2-dups -feliminate-unused-debug-types @gol
+-fdwarf2-indirect-strings @gol
 -feliminate-unused-debug-symbols -femit-class-debug-always @gol
 -fmem-report -fpre-ipa-mem-report -fpost-ipa-mem-report -fprofile-arcs @gol
 -frandom-seed=@var{string} -fsched-verbose=@var{n} @gol
@@ -789,7 +790,8 @@ See RS/6000 and PowerPC Options.
 -mfaster-structs  -mno-faster-structs @gol
 -mfpu  -mno-fpu  -mhard-float  -msoft-float @gol
 -mhard-quad-float  -msoft-quad-float @gol
--mimpure-text  -mno-impure-text  -mlittle-endian @gol
+-mimpure-text  -mno-impure-text @gol
+-mno-integer-ldd-std -mlittle-endian @gol
 -mstack-bias  -mno-stack-bias @gol
 -munaligned-doubles  -mno-unaligned-doubles @gol
 -mv8plus  -mno-v8plus  -mvis  -mno-vis
@@ -854,7 +856,7 @@ See S/390 and zSeries Options.
 -finstrument-functions-exclude-file-list=@var{file},@var{file},@dots{} @gol
 -fno-common  -fno-ident @gol
 -fpcc-struct-return  -fpic  -fPIC -fpie -fPIE @gol
--fno-jump-tables @gol
+-fno-jump-tables -fno-constant-pools @gol
 -frecord-gcc-switches @gol
 -freg-struct-return  -fshort-enums @gol
 -fshort-double  -fshort-wchar @gol
@@ -4442,6 +4444,14 @@ information describing them as in @file{
 Emit DWARF 2 unwind info as compiler generated @code{.eh_frame} section
 instead of using GAS @code{.cfi_*} directives.
 
+@item -fdwarf2-indirect-strings
+@opindex fdwarf2-indirect-strings
+Enable use of @code{DW_FORM_strp} for strings in DWARF2 debugging
+information.  This is on by default.  To output strings using
+@code{DW_FORM_string} only, use
+@option{-fno-dwarf2-indirect-strings}.  This option only makes sense
+when generating DWARF2 debugging information with @option{-gdwarf-2}.
+
 @cindex @command{prof}
 @item -p
 @opindex p
@@ -11548,6 +11558,10 @@ be statically or dynamically linked.
 @opindex mcmodel=large
 Generate code for the large model: This model makes no assumptions
 about addresses and sizes of sections.
+
+@item -msave-args
+@opindex msave-args
+Save integer arguments on the stack at function entry.
 @end table
 
 @node IA-64 Options
@@ -15112,6 +15126,13 @@ mode for all SPARC-V9 processors.
 @opindex mno-vis
 With @option{-mvis}, GCC generates code that takes advantage of the UltraSPARC
 Visual Instruction Set extensions.  The default is @option{-mno-vis}.
+
+@item -mno-integer-ldd-std
+@opindex mno-integer-ldd-std
+With @option{-mno-integer-ldd-std}, GCC does not use the @code{ldd}
+and @code{std} instructions for integer operands in 32-bit mode.  This
+is for use with legacy code using 64-bit quantities which are not
+64-bit aligned.
 @end table
 
 These @samp{-m} options are supported in addition to the above
@@ -15918,6 +15939,16 @@ building code which forms part of a dyna
 reference the address of a jump table.  On some targets, jump tables
 do not require a GOT and this option is not needed.
 
+@item -fno-constant-pools
+@opindex fno-constant-pools
+Do not put constants other than user-declared constant variables in
+pools in read-only memory even if this requires constants to be built
+up in registers and spilled to the stack.  This option is of use in
+conjunction with @option{-fpic} or @option{-fPIC} for building code
+which forms part of a dynamic linker and cannot reference the address
+of a constant pool.  It may not work reliably for all code or on all
+targets.
+
 @item -ffixed-@var{reg}
 @opindex ffixed
 Treat the register named @var{reg} as a fixed register; generated code
Index: gcc-4.4.4/gcc/dwarf2.h
===================================================================
--- gcc-4.4.4/gcc/dwarf2.h
+++ gcc-4.4.4/gcc/dwarf2.h
@@ -377,6 +377,8 @@ enum dwarf_attribute
     DW_AT_GNU_vector = 0x2107,
     /* VMS extensions.  */
     DW_AT_VMS_rtnbeg_pd_address = 0x2201,
+    /* Sun extension.  */
+    DW_AT_SUN_amd64_parmdump = 0x2224,
     /* UPC extension.  */
     DW_AT_upc_threads_scaled = 0x3210,
     /* PGI (STMicroelectronics) extensions.  */
Index: gcc-4.4.4/gcc/dwarf2out.c
===================================================================
--- gcc-4.4.4/gcc/dwarf2out.c
+++ gcc-4.4.4/gcc/dwarf2out.c
@@ -6045,6 +6045,9 @@ AT_string_form (dw_attr_ref a)
   if (node->form)
     return node->form;
 
+  if (!flag_dwarf2_indirect_strings)
+      return DW_FORM_string;
+
   len = strlen (node->str) + 1;
 
   /* If the string is shorter or equal to the size of the reference, it is
@@ -9362,10 +9365,6 @@ base_type_die (tree type)
 
   base_type_result = new_die (DW_TAG_base_type, comp_unit_die, type);
 
-  /* This probably indicates a bug.  */
-  if (! TYPE_NAME (type))
-    add_name_attribute (base_type_result, "__unknown__");
-
   add_AT_unsigned (base_type_result, DW_AT_byte_size,
 		   int_size_in_bytes (type));
   add_AT_unsigned (base_type_result, DW_AT_encoding, encoding);
@@ -9541,6 +9540,21 @@ modified_type_die (tree type, int is_con
 			  ((is_const_type ? TYPE_QUAL_CONST : 0)
 			   | (is_volatile_type ? TYPE_QUAL_VOLATILE : 0)));
 
+  if (qualified_type == sizetype
+      && TYPE_NAME (qualified_type)
+      && TREE_CODE (TYPE_NAME (qualified_type)) == TYPE_DECL)
+    {
+#ifdef ENABLE_CHECKING
+      gcc_assert (TREE_CODE (TREE_TYPE (TYPE_NAME (qualified_type)))
+		  == INTEGER_TYPE
+		  && TYPE_PRECISION (TREE_TYPE (TYPE_NAME (qualified_type)))
+		     == TYPE_PRECISION (qualified_type)
+		  && TYPE_UNSIGNED (TREE_TYPE (TYPE_NAME (qualified_type)))
+		     == TYPE_UNSIGNED (qualified_type));
+#endif
+      qualified_type = TREE_TYPE (TYPE_NAME (qualified_type));
+    }
+
   /* If we do, then we can just use its DIE, if it exists.  */
   if (qualified_type)
     {
@@ -9638,6 +9652,9 @@ modified_type_die (tree type, int is_con
 	name = DECL_NAME (name);
       add_name_attribute (mod_type_die, IDENTIFIER_POINTER (name));
     }
+  /* This probably indicates a bug.  */
+  else if (mod_type_die->die_tag == DW_TAG_base_type)
+    add_name_attribute (mod_type_die, "__unknown__");
 
   if (qualified_type)
     equate_type_number_to_die (qualified_type, mod_type_die);
@@ -13941,6 +13958,10 @@ gen_subprogram_die (tree decl, dw_die_re
   /* Add the calling convention attribute if requested.  */
   add_calling_convention_attribute (subr_die, decl);
 
+#ifdef TARGET_SAVE_ARGS
+  if (TARGET_SAVE_ARGS)
+    add_AT_flag (subr_die, DW_AT_SUN_amd64_parmdump, 1);
+#endif
 }
 
 /* Returns a hash value for X (which really is a die_struct).  */
@@ -15525,10 +15546,7 @@ dwarf2out_imported_module_or_decl_1 (tre
 
   if (TREE_CODE (decl) == TYPE_DECL || TREE_CODE (decl) == CONST_DECL)
     {
-      if (is_base_type (TREE_TYPE (decl)))
-	at_import_die = base_type_die (TREE_TYPE (decl));
-      else
-	at_import_die = force_type_die (TREE_TYPE (decl));
+      at_import_die = force_type_die (TREE_TYPE (decl));
       /* For namespace N { typedef void T; } using N::T; base_type_die
 	 returns NULL, but DW_TAG_imported_declaration requires
 	 the DW_AT_import tag.  Force creation of DW_TAG_typedef.  */
Index: gcc-4.4.4/gcc/reload.c
===================================================================
--- gcc-4.4.4/gcc/reload.c
+++ gcc-4.4.4/gcc/reload.c
@@ -116,6 +116,7 @@ a register with any other reload.  */
 /* True if X is a constant that can be forced into the constant pool.  */
 #define CONST_POOL_OK_P(X)			\
   (CONSTANT_P (X)				\
+   && flag_constant_pools			\
    && GET_CODE (X) != HIGH			\
    && !targetm.cannot_force_const_mem (X))
 
Index: gcc-4.4.4/gcc/testsuite/ChangeLog
===================================================================
--- gcc-4.4.4/gcc/testsuite/ChangeLog
+++ gcc-4.4.4/gcc/testsuite/ChangeLog
@@ -1,3 +1,9 @@
+2010-01-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* g++.old-deja/g++.mike/eh16.C: Rename err to e.
+	* g++.old-deja/g++.mike/eh17.C: Likewise.
+	* g++.old-deja/g++.mike/p5571.C: Likewise.
+
 2010-04-29  Release Manager
 
 	* GCC 4.4.4 released.
Index: gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/eh16.C
===================================================================
--- gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/eh16.C
+++ gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/eh16.C
@@ -1,11 +1,11 @@
 // { dg-do run { xfail sparc64-*-elf arm-*-pe } }
 // { dg-options "-fexceptions" }
 
-int err = 1;
+int e = 1;
 
 struct A {
   ~A() {
-    --err;
+    --e;
   }
 };
 
@@ -20,7 +20,7 @@ main() {
   try {
     B b;
   } catch (...) {
-    return err;
+    return e;
   }
   return 1;
 }
Index: gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/eh17.C
===================================================================
--- gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/eh17.C
+++ gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/eh17.C
@@ -1,11 +1,11 @@
 // { dg-do run { xfail sparc64-*-elf arm-*-pe } }
 // { dg-options "-fexceptions" }
 
-int err = 1;
+int e = 1;
 
 struct A {
   ~A() {
-    --err;
+    --e;
   }
 };
 
@@ -19,7 +19,7 @@ main() {
   try {
     B b;
   } catch (...) {
-    return err;
+    return e;
   }
   return 1;
 }
Index: gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/p5571.C
===================================================================
--- gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/p5571.C
+++ gcc-4.4.4/gcc/testsuite/g++.old-deja/g++.mike/p5571.C
@@ -1,7 +1,7 @@
 // { dg-do run  }
 // prms-id: 5571
 
-int err = 0;
+int e = 0;
 void *vp = 0;
 
 class ParentOne {
@@ -36,7 +36,7 @@ struct Student : public Child {
     else
       {
 	if (vp != (void *)this)
-	  ++err;
+	  ++e;
       }
   }
   void LocalPrintThis() {
@@ -45,7 +45,7 @@ struct Student : public Child {
     else
       {
 	if (vp != (void *)this)
-	  ++err;
+	  ++e;
       }
     PrintThis();
   }
@@ -55,7 +55,7 @@ struct Student : public Child {
     else
       {
 	if (vp != (void *)this)
-	  ++err;
+	  ++e;
       }
     Student::PrintThis();
   }
@@ -67,5 +67,5 @@ int main() {
   o.ForcedPrintThis();
   Child* pX = &o;
   pX->PrintThis();
-  return err;
+  return e;
 }
Index: gcc-4.4.4/gcc/testsuite/gcc.dg/debug/dwarf2/dwarf-strp-1.c
===================================================================
--- /dev/null
+++ gcc-4.4.4/gcc/testsuite/gcc.dg/debug/dwarf2/dwarf-strp-1.c
@@ -0,0 +1,7 @@
+/* Test -fno-dwarf2-indirect-strings.  */
+/* Origin: Joseph Myers <joseph@codesourcery.com> */
+/* { dg-do compile } */
+/* { dg-options "-gdwarf-2 -fno-dwarf2-indirect-strings -dA" } */
+/* { dg-final { scan-assembler-not "DW_FORM_strp" } } */
+
+struct abcdefghijklmnop { int abcdefghijklmnop; } x;
Index: gcc-4.4.4/gcc/testsuite/gcc.dg/pragma-align-2.c
===================================================================
--- gcc-4.4.4/gcc/testsuite/gcc.dg/pragma-align-2.c
+++ gcc-4.4.4/gcc/testsuite/gcc.dg/pragma-align-2.c
@@ -25,9 +25,9 @@ void abort (void);
 #pragma align bad_align		/* { dg-warning "malformed" } */
 #pragma align 1(bad_align	/* { dg-warning "malformed" } */
 
-int x, x1, x2, x4, x8, y8, z8, x16, x32, x64, x128, y128, z128;
+int x1, x2, x4, x8, y8, z8, x16, y16, x32, x64, x128, y128, z128;
 
-#pragma align 16(x)		/* { dg-warning "must appear before" } */
+#pragma align 16(y16)
 
 int
 main ()
@@ -47,6 +47,9 @@ main ()
   if (__alignof__ (x16) < 16)
     abort ();
 
+  if (__alignof__ (y16) < 16)
+    abort ();
+
   if (__alignof__ (x32) < 32)
     abort ();
 
Index: gcc-4.4.4/gcc/testsuite/gcc.dg/save-args-1.c
===================================================================
--- /dev/null
+++ gcc-4.4.4/gcc/testsuite/gcc.dg/save-args-1.c
@@ -0,0 +1,10 @@
+/* Test -msave-args */
+/* { dg-do compile { target i?86-*-solaris2.* } } */
+/* { dg-options "-m64 -msave-args" } */
+/* { dg-final { scan-assembler "movq\t%rsi, -32\\(%rbp\\)" } } */
+
+int
+foo(int argc, char **argv)
+{
+    return (1);
+}
Index: gcc-4.4.4/gcc/testsuite/lib/gcc-dg.exp
===================================================================
--- gcc-4.4.4/gcc/testsuite/lib/gcc-dg.exp
+++ gcc-4.4.4/gcc/testsuite/lib/gcc-dg.exp
@@ -343,6 +343,37 @@ proc gcc-dg-debug-runtest { target_compi
     }
 }
 
+# ARGS is a list.  The 0th element is the line number at which the
+# dg-forbid-option directive appeared in the source file.  The 1st
+# element is a regular expression.  If the regular expression matches
+# the command-line options implied by the current multilib, then the
+# test will be treated as unsupported.  The 2nd element of the list,
+# if present, is a target selector conditionalizing this directive;
+# if the target selector does not match the current target, this
+# dg-forbid-option directive is ignored.
+
+proc dg-forbid-option { args } {
+    set target_name [target_info name]
+    set pattern [lindex $args 1]
+
+    if {[llength $args] > 2} {
+	set selector [lindex $args 2]
+	if { [dg-process-target $selector] == "N" } {
+	    return
+	}
+    }
+
+    # Check to see if the option occurs in the multilib options
+    # for this target.
+    if {[board_info $target_name exists multilib_flags]} {
+	set multilib_flags [board_info $target_name multilib_flags]
+	if { [regexp -- ${pattern} $multilib_flags] } {
+	    upvar dg-do-what dg-do-what
+	    set dg-do-what [list [lindex ${dg-do-what} 0] "N" "P"]
+	}
+    }
+}
+
 # Prune any messages matching ARGS[1] (a regexp) from test output.
 proc dg-prune-output { args } {
     global additional_prunes
Index: gcc-4.4.4/gcc/varasm.c
===================================================================
--- gcc-4.4.4/gcc/varasm.c
+++ gcc-4.4.4/gcc/varasm.c
@@ -3555,7 +3555,7 @@ force_const_mem (enum machine_mode mode,
   void **slot;
 
   /* If we're not allowed to drop X into the constant pool, don't.  */
-  if (targetm.cannot_force_const_mem (x))
+  if (!flag_constant_pools || (*targetm.cannot_force_const_mem) (x))
     return NULL_RTX;
 
   /* Record that this function has used a constant pool entry.  */
@@ -5484,6 +5484,9 @@ assemble_alias (tree decl, tree target)
 #endif
     }
 
+  if (TREE_ASM_WRITTEN (decl))
+    return;
+
   /* We must force creation of DECL_RTL for debug info generation, even though
      we don't use it here.  */
   make_decl_rtl (decl);
Index: gcc-4.4.4/intl/configure
===================================================================
--- gcc-4.4.4/intl/configure
+++ gcc-4.4.4/intl/configure
@@ -1557,8 +1557,8 @@ else
       test -z "$ac_dir" && ac_dir=.
       for ac_exec_ext in '' $ac_executable_extensions; do
         if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
-          if $ac_dir/$ac_word --statistics /dev/null >/dev/null 2>&1 &&
-     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+          if $ac_dir/$ac_word /dev/null >/dev/null 2>&1 &&
+     (if $ac_dir/$ac_word /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
             ac_cv_path_MSGFMT="$ac_dir/$ac_word$ac_exec_ext"
             break 2
           fi
@@ -1761,8 +1761,8 @@ fi
 
 
       if test "$GMSGFMT" != ":"; then
-            if $GMSGFMT --statistics /dev/null >/dev/null 2>&1 &&
-       (if $GMSGFMT --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+            if $GMSGFMT /dev/null >/dev/null 2>&1 &&
+       (if $GMSGFMT /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
       : ;
     else
       GMSGFMT=`echo "$GMSGFMT" | sed -e 's,^.*/,,'`
Index: gcc-4.4.4/intl/plural.c
===================================================================
--- gcc-4.4.4/intl/plural.c
+++ gcc-4.4.4/intl/plural.c
@@ -1,22 +1,85 @@
-/* A Bison parser, made from plural.y
-   by GNU bison 1.35.  */
+/* A Bison parser, made by GNU Bison 1.875.  */
 
-#define YYBISON 1  /* Identify Bison output.  */
+/* Skeleton parser for Yacc-like parsing with Bison,
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002 Free Software Foundation, Inc.
 
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330,
+   Boston, MA 02111-1307, USA.  */
+
+/* As a special exception, when this file is copied by Bison into a
+   Bison output file, you may use that output file without restriction.
+   This special exception was added by the Free Software Foundation
+   in version 1.24 of Bison.  */
+
+/* Written by Richard Stallman by simplifying the original so called
+   ``semantic'' parser.  */
+
+/* All symbols defined below should begin with yy or YY, to avoid
+   infringing on user name space.  This should be done even for local
+   variables, as they might otherwise be expanded by user macros.
+   There are some unavoidable exceptions within include files to
+   define necessary library symbols; they are noted "INFRINGES ON
+   USER NAME SPACE" below.  */
+
+/* Identify Bison output.  */
+#define YYBISON 1
+
+/* Skeleton name.  */
+#define YYSKELETON_NAME "yacc.c"
+
+/* Pure parsers.  */
+#define YYPURE 1
+
+/* Using locations.  */
+#define YYLSP_NEEDED 0
+
+/* If NAME_PREFIX is specified substitute the variables and functions
+   names.  */
 #define yyparse __gettextparse
-#define yylex __gettextlex
+#define yylex   __gettextlex
 #define yyerror __gettexterror
-#define yylval __gettextlval
-#define yychar __gettextchar
+#define yylval  __gettextlval
+#define yychar  __gettextchar
 #define yydebug __gettextdebug
 #define yynerrs __gettextnerrs
-# define	EQUOP2	257
-# define	CMPOP2	258
-# define	ADDOP2	259
-# define	MULOP2	260
-# define	NUMBER	261
 
-#line 1 "plural.y"
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     EQUOP2 = 258,
+     CMPOP2 = 259,
+     ADDOP2 = 260,
+     MULOP2 = 261,
+     NUMBER = 262
+   };
+#endif
+#define EQUOP2 258
+#define CMPOP2 259
+#define ADDOP2 260
+#define MULOP2 261
+#define NUMBER 262
+
+
+
+
+/* Copy the first part of user declarations.  */
+#line 1 "../../../src/csl-sol210-3_4-branch/intl/plural.y"
 
 /* Expression parsing for plural form selection.
    Copyright (C) 2000, 2001 Free Software Foundation, Inc.
@@ -62,17 +125,38 @@
 #define YYLEX_PARAM	&((struct parse_args *) arg)->cp
 #define YYPARSE_PARAM	arg
 
-#line 49 "plural.y"
-#ifndef YYSTYPE
-typedef union {
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
+#line 49 "../../../src/csl-sol210-3_4-branch/intl/plural.y"
+typedef union YYSTYPE {
   unsigned long int num;
   enum operator op;
   struct expression *exp;
-} yystype;
-# define YYSTYPE yystype
+} YYSTYPE;
+/* Line 191 of yacc.c.  */
+#line 150 "../../../src/csl-sol210-3_4-branch/intl/plural.c"
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
 # define YYSTYPE_IS_TRIVIAL 1
 #endif
-#line 55 "plural.y"
+
+
+
+/* Copy the second part of user declarations.  */
+#line 55 "../../../src/csl-sol210-3_4-branch/intl/plural.y"
 
 /* Prototypes for local functions.  */
 static struct expression *new_exp PARAMS ((int nargs, enum operator op,
@@ -260,22 +344,9 @@ static const short yyr1[] =
       17,    17,    17
 };
 
-/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN. */
-static const short yyr2[] =
-{
-       0,     1,     5,     3,     3,     3,     3,     3,     3,     2,
-       1,     1,     3
-};
 
-/* YYDEFACT[S] -- default rule to reduce with in state S when YYTABLE
-   doesn't specify something else to do.  Zero means the default is an
-   error. */
-static const short yydefact[] =
-{
-       0,     0,    11,    10,     0,     1,     9,     0,     0,     0,
-       0,     0,     0,     0,     0,    12,     0,     3,     4,     5,
-       6,     7,     8,     0,     2,     0,     0,     0
-};
+/* Line 214 of yacc.c.  */
+#line 265 "../../../src/csl-sol210-3_4-branch/intl/plural.c"
 
 static const short yydefgoto[] =
 {
@@ -388,37 +459,28 @@ static const short yycheck[] =
 #  define YYSTACK_ALLOC malloc
 #  define YYSTACK_FREE free
 # endif
-#endif /* ! defined (yyoverflow) || defined (YYERROR_VERBOSE) */
+#endif /* ! defined (yyoverflow) || YYERROR_VERBOSE */
 
 
 #if (! defined (yyoverflow) \
      && (! defined (__cplusplus) \
-	 || (YYLTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
+	 || (YYSTYPE_IS_TRIVIAL)))
 
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
   short yyss;
   YYSTYPE yyvs;
-# if YYLSP_NEEDED
-  YYLTYPE yyls;
-# endif
-};
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
-# define YYSTACK_GAP_MAX (sizeof (union yyalloc) - 1)
+# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
 
 /* The size of an array large to enough to hold all stacks, each with
    N elements.  */
-# if YYLSP_NEEDED
-#  define YYSTACK_BYTES(N) \
-     ((N) * (sizeof (short) + sizeof (YYSTYPE) + sizeof (YYLTYPE))	\
-      + 2 * YYSTACK_GAP_MAX)
-# else
-#  define YYSTACK_BYTES(N) \
+# define YYSTACK_BYTES(N) \
      ((N) * (sizeof (short) + sizeof (YYSTYPE))				\
-      + YYSTACK_GAP_MAX)
-# endif
+      + YYSTACK_GAP_MAXIMUM)
 
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
@@ -449,13 +511,199 @@ union yyalloc
 	YYSIZE_T yynewbytes;						\
 	YYCOPY (&yyptr->Stack, Stack, yysize);				\
 	Stack = &yyptr->Stack;						\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAX;	\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
 	yyptr += yynewbytes / sizeof (*yyptr);				\
       }									\
     while (0)
 
 #endif
 
+#if defined (__STDC__) || defined (__cplusplus)
+   typedef signed char yysigned_char;
+#else
+   typedef short yysigned_char;
+#endif
+
+/* YYFINAL -- State number of the termination state. */
+#define YYFINAL  9
+/* YYLAST -- Last index in YYTABLE.  */
+#define YYLAST   54
+
+/* YYNTOKENS -- Number of terminals. */
+#define YYNTOKENS  16
+/* YYNNTS -- Number of nonterminals. */
+#define YYNNTS  3
+/* YYNRULES -- Number of rules. */
+#define YYNRULES  13
+/* YYNRULES -- Number of states. */
+#define YYNSTATES  27
+
+/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+#define YYUNDEFTOK  2
+#define YYMAXUTOK   262
+
+#define YYTRANSLATE(YYX) 						\
+  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
+
+/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+static const unsigned char yytranslate[] =
+{
+       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,    10,     2,     2,     2,     2,     5,     2,
+      14,    15,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    12,     2,
+       2,     2,     2,     3,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+      13,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     4,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     1,     2,     6,     7,
+       8,     9,    11
+};
+
+#if YYDEBUG
+/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
+   YYRHS.  */
+static const unsigned char yyprhs[] =
+{
+       0,     0,     3,     5,    11,    15,    19,    23,    27,    31,
+      35,    38,    40,    42
+};
+
+/* YYRHS -- A `-1'-separated list of the rules' RHS. */
+static const yysigned_char yyrhs[] =
+{
+      17,     0,    -1,    18,    -1,    18,     3,    18,    12,    18,
+      -1,    18,     4,    18,    -1,    18,     5,    18,    -1,    18,
+       6,    18,    -1,    18,     7,    18,    -1,    18,     8,    18,
+      -1,    18,     9,    18,    -1,    10,    18,    -1,    13,    -1,
+      11,    -1,    14,    18,    15,    -1
+};
+
+/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+static const unsigned char yyrline[] =
+{
+       0,   179,   179,   187,   191,   195,   199,   203,   207,   211,
+     215,   219,   223,   228
+};
+#endif
+
+#if YYDEBUG || YYERROR_VERBOSE
+/* YYTNME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
+   First, the terminals, then, starting at YYNTOKENS, nonterminals. */
+static const char *const yytname[] =
+{
+  "$end", "error", "$undefined", "'?'", "'|'", "'&'", "EQUOP2", "CMPOP2",
+  "ADDOP2", "MULOP2", "'!'", "NUMBER", "':'", "'n'", "'('", "')'",
+  "$accept", "start", "exp", 0
+};
+#endif
+
+# ifdef YYPRINT
+/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
+   token YYLEX-NUM.  */
+static const unsigned short yytoknum[] =
+{
+       0,   256,   257,    63,   124,    38,   258,   259,   260,   261,
+      33,   262,    58,   110,    40,    41
+};
+# endif
+
+/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const unsigned char yyr1[] =
+{
+       0,    16,    17,    18,    18,    18,    18,    18,    18,    18,
+      18,    18,    18,    18
+};
+
+/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
+static const unsigned char yyr2[] =
+{
+       0,     2,     1,     5,     3,     3,     3,     3,     3,     3,
+       2,     1,     1,     3
+};
+
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
+   means the default is an error.  */
+static const unsigned char yydefact[] =
+{
+       0,     0,    12,    11,     0,     0,     2,    10,     0,     1,
+       0,     0,     0,     0,     0,     0,     0,    13,     0,     4,
+       5,     6,     7,     8,     9,     0,     3
+};
+
+/* YYDEFGOTO[NTERM-NUM]. */
+static const yysigned_char yydefgoto[] =
+{
+      -1,     5,     6
+};
+
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
+#define YYPACT_NINF -10
+static const yysigned_char yypact[] =
+{
+      -9,    -9,   -10,   -10,    -9,     8,    36,   -10,    13,   -10,
+      -9,    -9,    -9,    -9,    -9,    -9,    -9,   -10,    26,    41,
+      45,    18,    -2,    14,   -10,    -9,    36
+};
+
+/* YYPGOTO[NTERM-NUM].  */
+static const yysigned_char yypgoto[] =
+{
+     -10,   -10,    -1
+};
+
+/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule which
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
+#define YYTABLE_NINF -1
+static const unsigned char yytable[] =
+{
+       7,     1,     2,     8,     3,     4,    15,    16,     9,    18,
+      19,    20,    21,    22,    23,    24,    10,    11,    12,    13,
+      14,    15,    16,    16,    26,    14,    15,    16,    17,    10,
+      11,    12,    13,    14,    15,    16,     0,     0,    25,    10,
+      11,    12,    13,    14,    15,    16,    12,    13,    14,    15,
+      16,    13,    14,    15,    16
+};
+
+static const yysigned_char yycheck[] =
+{
+       1,    10,    11,     4,    13,    14,     8,     9,     0,    10,
+      11,    12,    13,    14,    15,    16,     3,     4,     5,     6,
+       7,     8,     9,     9,    25,     7,     8,     9,    15,     3,
+       4,     5,     6,     7,     8,     9,    -1,    -1,    12,     3,
+       4,     5,     6,     7,     8,     9,     5,     6,     7,     8,
+       9,     6,     7,     8,     9
+};
+
+/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+   symbol of state STATE-NUM.  */
+static const unsigned char yystos[] =
+{
+       0,    10,    11,    13,    14,    17,    18,    18,    18,     0,
+       3,     4,     5,     6,     7,     8,     9,    15,    18,    18,
+      18,    18,    18,    18,    18,    12,    18
+};
 
 #if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
 # define YYSIZE_T __SIZE_TYPE__
@@ -475,29 +723,34 @@ union yyalloc
 
 #define yyerrok		(yyerrstatus = 0)
 #define yyclearin	(yychar = YYEMPTY)
-#define YYEMPTY		-2
+#define YYEMPTY		(-2)
 #define YYEOF		0
+
 #define YYACCEPT	goto yyacceptlab
-#define YYABORT 	goto yyabortlab
+#define YYABORT		goto yyabortlab
 #define YYERROR		goto yyerrlab1
+
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
    Once GCC version 2 has supplanted version 1, this can go.  */
+
 #define YYFAIL		goto yyerrlab
+
 #define YYRECOVERING()  (!!yyerrstatus)
+
 #define YYBACKUP(Token, Value)					\
 do								\
   if (yychar == YYEMPTY && yylen == 1)				\
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
-      yychar1 = YYTRANSLATE (yychar);				\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK;						\
       goto yybackup;						\
     }								\
   else								\
     { 								\
-      yyerror ("syntax error: cannot back up");			\
+      yyerror ("syntax error: cannot back up");\
       YYERROR;							\
     }								\
 while (0)
@@ -505,41 +758,24 @@ while (0)
 #define YYTERROR	1
 #define YYERRCODE	256
 
-
 /* YYLLOC_DEFAULT -- Compute the default location (before the actions
-   are run).
-
-   When YYLLOC_DEFAULT is run, CURRENT is set the location of the
-   first token.  By default, to implement support for ranges, extend
-   its range to the last symbol.  */
+   are run).  */
 
 #ifndef YYLLOC_DEFAULT
-# define YYLLOC_DEFAULT(Current, Rhs, N)       	\
-   Current.last_line   = Rhs[N].last_line;	\
-   Current.last_column = Rhs[N].last_column;
+# define YYLLOC_DEFAULT(Current, Rhs, N)         \
+  Current.first_line   = Rhs[1].first_line;      \
+  Current.first_column = Rhs[1].first_column;    \
+  Current.last_line    = Rhs[N].last_line;       \
+  Current.last_column  = Rhs[N].last_column;
 #endif
 
-
 /* YYLEX -- calling `yylex' with the right arguments.  */
 
-#if YYPURE
-# if YYLSP_NEEDED
-#  ifdef YYLEX_PARAM
-#   define YYLEX		yylex (&yylval, &yylloc, YYLEX_PARAM)
-#  else
-#   define YYLEX		yylex (&yylval, &yylloc)
-#  endif
-# else /* !YYLSP_NEEDED */
-#  ifdef YYLEX_PARAM
-#   define YYLEX		yylex (&yylval, YYLEX_PARAM)
-#  else
-#   define YYLEX		yylex (&yylval)
-#  endif
-# endif /* !YYLSP_NEEDED */
-#else /* !YYPURE */
-# define YYLEX			yylex ()
-#endif /* !YYPURE */
-
+#ifdef YYLEX_PARAM
+# define YYLEX yylex (&yylval, YYLEX_PARAM)
+#else
+# define YYLEX yylex (&yylval)
+#endif
 
 /* Enable debugging if requested.  */
 #if YYDEBUG
@@ -554,13 +790,93 @@ do {						\
   if (yydebug)					\
     YYFPRINTF Args;				\
 } while (0)
+
+# define YYDSYMPRINT(Args)			\
+do {						\
+  if (yydebug)					\
+    yysymprint Args;				\
+} while (0)
+
+# define YYDSYMPRINTF(Title, Token, Value, Location)		\
+do {								\
+  if (yydebug)							\
+    {								\
+      YYFPRINTF (stderr, "%s ", Title);				\
+      yysymprint (stderr, 					\
+                  Token, Value);	\
+      YYFPRINTF (stderr, "\n");					\
+    }								\
+} while (0)
+
+/*------------------------------------------------------------------.
+| yy_stack_print -- Print the state stack from its BOTTOM up to its |
+| TOP (cinluded).                                                   |
+`------------------------------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yy_stack_print (short *bottom, short *top)
+#else
+static void
+yy_stack_print (bottom, top)
+    short *bottom;
+    short *top;
+#endif
+{
+  YYFPRINTF (stderr, "Stack now");
+  for (/* Nothing. */; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
+  YYFPRINTF (stderr, "\n");
+}
+
+# define YY_STACK_PRINT(Bottom, Top)				\
+do {								\
+  if (yydebug)							\
+    yy_stack_print ((Bottom), (Top));				\
+} while (0)
+
+
+/*------------------------------------------------.
+| Report that the YYRULE is going to be reduced.  |
+`------------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yy_reduce_print (int yyrule)
+#else
+static void
+yy_reduce_print (yyrule)
+    int yyrule;
+#endif
+{
+  int yyi;
+  unsigned int yylineno = yyrline[yyrule];
+  YYFPRINTF (stderr, "Reducing stack by rule %d (line %u), ",
+             yyrule - 1, yylineno);
+  /* Print the symbols being reduced, and their result.  */
+  for (yyi = yyprhs[yyrule]; 0 <= yyrhs[yyi]; yyi++)
+    YYFPRINTF (stderr, "%s ", yytname [yyrhs[yyi]]);
+  YYFPRINTF (stderr, "-> %s\n", yytname [yyr1[yyrule]]);
+}
+
+# define YY_REDUCE_PRINT(Rule)		\
+do {					\
+  if (yydebug)				\
+    yy_reduce_print (Rule);		\
+} while (0)
+
 /* Nonzero means print parse trace.  It is left uninitialized so that
    multiple parsers can coexist.  */
 int yydebug;
 #else /* !YYDEBUG */
 # define YYDPRINTF(Args)
+# define YYDSYMPRINT(Args)
+# define YYDSYMPRINTF(Title, Token, Value, Location)
+# define YY_STACK_PRINT(Bottom, Top)
+# define YY_REDUCE_PRINT(Rule)
 #endif /* !YYDEBUG */
 
+
 /* YYINITDEPTH -- initial size of the parser's stacks.  */
 #ifndef	YYINITDEPTH
 # define YYINITDEPTH 200
@@ -580,8 +896,10 @@ int yydebug;
 #ifndef YYMAXDEPTH
 # define YYMAXDEPTH 10000
 #endif
+
 
-#ifdef YYERROR_VERBOSE
+
+#if YYERROR_VERBOSE
 
 # ifndef yystrlen
 #  if defined (__GLIBC__) && defined (_STRING_H)
@@ -631,78 +949,127 @@ yystpcpy (yydest, yysrc)
 }
 #  endif
 # endif
-#endif
+
+#endif /* !YYERROR_VERBOSE */
+
 
 #line 315 "/usr/local/share/bison/bison.simple"
 
+#if YYDEBUG
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yysymprint (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  /* Pacify ``unused variable'' warnings.  */
+  (void) yyvaluep;
+
+  if (yytype < YYNTOKENS)
+    {
+      YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
+# ifdef YYPRINT
+      YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
+# endif
+    }
+  else
+    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+
+  switch (yytype)
+    {
+      default:
+        break;
+    }
+  YYFPRINTF (yyoutput, ")");
+}
+
+#endif /* ! YYDEBUG */
+/*-----------------------------------------------.
+| Release the memory associated to this symbol.  |
+`-----------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yydestruct (int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yydestruct (yytype, yyvaluep)
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  /* Pacify ``unused variable'' warnings.  */
+  (void) yyvaluep;
+
+  switch (yytype)
+    {
+
+      default:
+        break;
+    }
+}
+
 
-/* The user can define YYPARSE_PARAM as the name of an argument to be passed
-   into yyparse.  The argument should have type void *.
-   It should actually point to an object.
-   Grammar actions can access the variable by casting it
-   to the proper pointer type.  */
+/* Prevent warnings from -Wmissing-prototypes.  */
 
 #ifdef YYPARSE_PARAM
 # if defined (__STDC__) || defined (__cplusplus)
-#  define YYPARSE_PARAM_ARG void *YYPARSE_PARAM
-#  define YYPARSE_PARAM_DECL
+int yyparse (void *YYPARSE_PARAM);
 # else
-#  define YYPARSE_PARAM_ARG YYPARSE_PARAM
-#  define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;
+int yyparse ();
 # endif
-#else /* !YYPARSE_PARAM */
-# define YYPARSE_PARAM_ARG
-# define YYPARSE_PARAM_DECL
-#endif /* !YYPARSE_PARAM */
-
-/* Prevent warning if -Wstrict-prototypes.  */
-#ifdef __GNUC__
-# ifdef YYPARSE_PARAM
-int yyparse (void *);
-# else
+#else /* ! YYPARSE_PARAM */
+#if defined (__STDC__) || defined (__cplusplus)
 int yyparse (void);
-# endif
+#else
+int yyparse ();
 #endif
+#endif /* ! YYPARSE_PARAM */
 
-/* YY_DECL_VARIABLES -- depending whether we use a pure parser,
-   variables are global, or local to YYPARSE.  */
 
-#define YY_DECL_NON_LSP_VARIABLES			\
-/* The lookahead symbol.  */				\
-int yychar;						\
-							\
-/* The semantic value of the lookahead symbol. */	\
-YYSTYPE yylval;						\
-							\
-/* Number of parse errors so far.  */			\
-int yynerrs;
 
-#if YYLSP_NEEDED
-# define YY_DECL_VARIABLES			\
-YY_DECL_NON_LSP_VARIABLES			\
-						\
-/* Location data for the lookahead symbol.  */	\
-YYLTYPE yylloc;
-#else
-# define YY_DECL_VARIABLES			\
-YY_DECL_NON_LSP_VARIABLES
-#endif
 
 
-/* If nonreentrant, generate the variables here. */
 
-#if !YYPURE
-YY_DECL_VARIABLES
-#endif  /* !YYPURE */
+/*----------.
+| yyparse.  |
+`----------*/
 
+#ifdef YYPARSE_PARAM
+# if defined (__STDC__) || defined (__cplusplus)
+int yyparse (void *YYPARSE_PARAM)
+# else
+int yyparse (YYPARSE_PARAM)
+  void *YYPARSE_PARAM;
+# endif
+#else /* ! YYPARSE_PARAM */
+#if defined (__STDC__) || defined (__cplusplus)
+int
+yyparse (void)
+#else
 int
-yyparse (YYPARSE_PARAM_ARG)
-     YYPARSE_PARAM_DECL
+yyparse ()
+
+#endif
+#endif
 {
-  /* If reentrant, generate the variables here. */
-#if YYPURE
-  YY_DECL_VARIABLES
-#endif  /* !YYPURE */
+  /* The lookahead symbol.  */
+int yychar;
+
+/* The semantic value of the lookahead symbol.  */
+YYSTYPE yylval;
+
+/* Number of syntax errors so far.  */
+int yynerrs;
 
   register int yystate;
   register int yyn;
@@ -710,7 +1077,7 @@ yyparse (YYPARSE_PARAM_ARG)
   /* Number of tokens to shift before error messages enabled.  */
   int yyerrstatus;
   /* Lookahead token as an internal (translated) token number.  */
-  int yychar1 = 0;
+  int yytoken = 0;
 
   /* Three stacks and their tools:
      `yyss': related to states,
@@ -720,7 +1087,7 @@ yyparse (YYPARSE_PARAM_ARG)
      Refer to the stacks thru separate pointers, to allow yyoverflow
      to reallocate them elsewhere.  */
 
-  /* The state stack. */
+  /* The state stack.  */
   short	yyssa[YYINITDEPTH];
   short *yyss = yyssa;
   register short *yyssp;
@@ -730,31 +1097,19 @@ yyparse (YYPARSE_PARAM_ARG)
   YYSTYPE *yyvs = yyvsa;
   register YYSTYPE *yyvsp;
 
-#if YYLSP_NEEDED
-  /* The location stack.  */
-  YYLTYPE yylsa[YYINITDEPTH];
-  YYLTYPE *yyls = yylsa;
-  YYLTYPE *yylsp;
-#endif
 
-#if YYLSP_NEEDED
-# define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)
-#else
-# define YYPOPSTACK   (yyvsp--, yyssp--)
-#endif
 
-  YYSIZE_T yystacksize = YYINITDEPTH;
+#define YYPOPSTACK   (yyvsp--, yyssp--)
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
 
   /* The variables used to return semantic value and location from the
      action routines.  */
   YYSTYPE yyval;
-#if YYLSP_NEEDED
-  YYLTYPE yyloc;
-#endif
+
 
   /* When reducing, the number of symbols on the RHS of the reduced
-     rule. */
+     rule.  */
   int yylen;
 
   YYDPRINTF ((stderr, "Starting parse\n"));
@@ -771,9 +1126,7 @@ yyparse (YYPARSE_PARAM_ARG)
 
   yyssp = yyss;
   yyvsp = yyvs;
-#if YYLSP_NEEDED
-  yylsp = yyls;
-#endif
+
   goto yysetstate;
 
 /*------------------------------------------------------------.
@@ -788,7 +1141,7 @@ yyparse (YYPARSE_PARAM_ARG)
  yysetstate:
   *yyssp = yystate;
 
-  if (yyssp >= yyss + yystacksize - 1)
+  if (yyss + yystacksize - 1 <= yyssp)
     {
       /* Get the current used size of the three stacks, in elements.  */
       YYSIZE_T yysize = yyssp - yyss + 1;
@@ -801,24 +1154,17 @@ yyparse (YYPARSE_PARAM_ARG)
 	YYSTYPE *yyvs1 = yyvs;
 	short *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
-	   data in use in that stack, in bytes.  */
-# if YYLSP_NEEDED
-	YYLTYPE *yyls1 = yyls;
-	/* This used to be a conditional around just the two extra args,
-	   but that might be undefined if yyoverflow is a macro.  */
-	yyoverflow ("parser stack overflow",
-		    &yyss1, yysize * sizeof (*yyssp),
-		    &yyvs1, yysize * sizeof (*yyvsp),
-		    &yyls1, yysize * sizeof (*yylsp),
-		    &yystacksize);
-	yyls = yyls1;
-# else
+	   data in use in that stack, in bytes.  This used to be a
+	   conditional around just the two extra args, but that might
+	   be undefined if yyoverflow is a macro.  */
 	yyoverflow ("parser stack overflow",
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
-# endif
+
 	yyss = yyss1;
 	yyvs = yyvs1;
       }
@@ -827,10 +1173,10 @@ yyparse (YYPARSE_PARAM_ARG)
       goto yyoverflowlab;
 # else
       /* Extend the stack our own way.  */
-      if (yystacksize >= YYMAXDEPTH)
+      if (YYMAXDEPTH <= yystacksize)
 	goto yyoverflowlab;
       yystacksize *= 2;
-      if (yystacksize > YYMAXDEPTH)
+      if (YYMAXDEPTH < yystacksize)
 	yystacksize = YYMAXDEPTH;
 
       {
@@ -841,10 +1187,8 @@ yyparse (YYPARSE_PARAM_ARG)
 	  goto yyoverflowlab;
 	YYSTACK_RELOCATE (yyss);
 	YYSTACK_RELOCATE (yyvs);
-# if YYLSP_NEEDED
-	YYSTACK_RELOCATE (yyls);
-# endif
-# undef YYSTACK_RELOCATE
+
+#  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
       }
@@ -853,14 +1197,12 @@ yyparse (YYPARSE_PARAM_ARG)
 
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
-#if YYLSP_NEEDED
-      yylsp = yyls + yysize - 1;
-#endif
+
 
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
-      if (yyssp >= yyss + yystacksize - 1)
+      if (yyss + yystacksize - 1 <= yyssp)
 	YYABORT;
     }
 
@@ -868,7 +1210,6 @@ yyparse (YYPARSE_PARAM_ARG)
 
   goto yybackup;
 
-
 /*-----------.
 | yybackup.  |
 `-----------*/
@@ -881,88 +1222,55 @@ yybackup:
   /* First try to decide what to do without reference to lookahead token.  */
 
   yyn = yypact[yystate];
-  if (yyn == YYFLAG)
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
   /* Not known => get a lookahead token if don't already have one.  */
 
-  /* yychar is either YYEMPTY or YYEOF
-     or a valid token in external form.  */
-
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
       yychar = YYLEX;
     }
 
-  /* Convert token to internal form (in yychar1) for indexing tables with */
-
-  if (yychar <= 0)		/* This means end of input. */
+  if (yychar <= YYEOF)
     {
-      yychar1 = 0;
-      yychar = YYEOF;		/* Don't call YYLEX any more */
-
+      yychar = yytoken = YYEOF;
       YYDPRINTF ((stderr, "Now at end of input.\n"));
     }
   else
     {
-      yychar1 = YYTRANSLATE (yychar);
-
-#if YYDEBUG
-     /* We have to keep this `#if YYDEBUG', since we use variables
-	which are defined only if `YYDEBUG' is set.  */
-      if (yydebug)
-	{
-	  YYFPRINTF (stderr, "Next token is %d (%s",
-		     yychar, yytname[yychar1]);
-	  /* Give the individual parser a way to print the precise
-	     meaning of a token, for further debugging info.  */
-# ifdef YYPRINT
-	  YYPRINT (stderr, yychar, yylval);
-# endif
-	  YYFPRINTF (stderr, ")\n");
-	}
-#endif
+      yytoken = YYTRANSLATE (yychar);
+      YYDSYMPRINTF ("Next token is", yytoken, &yylval, &yylloc);
     }
 
-  yyn += yychar1;
-  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)
+  /* If the proper action on seeing token YYTOKEN is to reduce or to
+     detect an error, take that action.  */
+  yyn += yytoken;
+  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
     goto yydefault;
-
   yyn = yytable[yyn];
-
-  /* yyn is what to do for this token type in this state.
-     Negative => reduce, -yyn is rule number.
-     Positive => shift, yyn is new state.
-       New state is final state => don't bother to shift,
-       just return success.
-     0, or most negative number => error.  */
-
-  if (yyn < 0)
+  if (yyn <= 0)
     {
-      if (yyn == YYFLAG)
+      if (yyn == 0 || yyn == YYTABLE_NINF)
 	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
-  else if (yyn == 0)
-    goto yyerrlab;
 
   if (yyn == YYFINAL)
     YYACCEPT;
 
   /* Shift the lookahead token.  */
-  YYDPRINTF ((stderr, "Shifting token %d (%s), ",
-	      yychar, yytname[yychar1]));
+  YYDPRINTF ((stderr, "Shifting token %s, ", yytname[yytoken]));
 
   /* Discard the token being shifted unless it is eof.  */
   if (yychar != YYEOF)
     yychar = YYEMPTY;
 
   *++yyvsp = yylval;
-#if YYLSP_NEEDED
-  *++yylsp = yylloc;
-#endif
+
 
   /* Count tokens shifted since error; after three, turn off error
      status.  */
@@ -993,24 +1301,19 @@ yyreduce:
   /* If YYLEN is nonzero, implement the default value of the action:
      `$$ = $1'.
 
-     Otherwise, the following line sets YYVAL to the semantic value of
-     the lookahead token.  This behavior is undocumented and Bison
+     Otherwise, the following line sets YYVAL to garbage.
+     This behavior is undocumented and Bison
      users should not rely upon it.  Assigning to YYVAL
      unconditionally makes the parser a bit smaller, and it avoids a
      GCC warning that YYVAL may be used uninitialized.  */
   yyval = yyvsp[1-yylen];
 
-#if YYLSP_NEEDED
-  /* Similarly for the default location.  Let the user run additional
-     commands if for instance locations are ranges.  */
-  yyloc = yylsp[1-yylen];
-  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
-#endif
 
-#if YYDEBUG
-  /* We have to keep this `#if YYDEBUG', since we use variables which
-     are defined only if `YYDEBUG' is set.  */
-  if (yydebug)
+  YY_REDUCE_PRINT (yyn);
+  switch (yyn)
+    {
+        case 2:
+#line 180 "../../../src/csl-sol210-3_4-branch/intl/plural.y"
     {
       int yyi;
 
@@ -1101,32 +1404,22 @@ case 12:
 	    yyval.exp = yyvsp[-1].exp;
 	  }
     break;
-}
 
 #line 705 "/usr/local/share/bison/bison.simple"
 
+    }
+
+/* Line 991 of yacc.c.  */
+#line 1239 "../../../src/csl-sol210-3_4-branch/intl/plural.c"
 
   yyvsp -= yylen;
   yyssp -= yylen;
-#if YYLSP_NEEDED
-  yylsp -= yylen;
-#endif
 
-#if YYDEBUG
-  if (yydebug)
-    {
-      short *yyssp1 = yyss - 1;
-      YYFPRINTF (stderr, "state stack now");
-      while (yyssp1 != yyssp)
-	YYFPRINTF (stderr, " %d", *++yyssp1);
-      YYFPRINTF (stderr, "\n");
-    }
-#endif
+
+  YY_STACK_PRINT (yyss, yyssp);
 
   *++yyvsp = yyval;
-#if YYLSP_NEEDED
-  *++yylsp = yyloc;
-#endif
+
 
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
@@ -1134,11 +1427,11 @@ case 12:
 
   yyn = yyr1[yyn];
 
-  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;
-  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)
+  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
+  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
     yystate = yytable[yystate];
   else
-    yystate = yydefgoto[yyn - YYNTBASE];
+    yystate = yydefgoto[yyn - YYNTOKENS];
 
   goto yynewstate;
 
@@ -1151,13 +1444,13 @@ yyerrlab:
   if (!yyerrstatus)
     {
       ++yynerrs;
-
-#ifdef YYERROR_VERBOSE
+#if YYERROR_VERBOSE
       yyn = yypact[yystate];
 
-      if (yyn > YYFLAG && yyn < YYLAST)
+      if (YYPACT_NINF < yyn && yyn < YYLAST)
 	{
 	  YYSIZE_T yysize = 0;
+	  int yytype = YYTRANSLATE (yychar);
 	  char *yymsg;
 	  int yyx, yycount;
 
@@ -1166,15 +1459,15 @@ yyerrlab:
 	     YYCHECK.  */
 	  for (yyx = yyn < 0 ? -yyn : 0;
 	       yyx < (int) (sizeof (yytname) / sizeof (char *)); yyx++)
-	    if (yycheck[yyx + yyn] == yyx)
+	    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
 	      yysize += yystrlen (yytname[yyx]) + 15, yycount++;
-	  yysize += yystrlen ("parse error, unexpected ") + 1;
-	  yysize += yystrlen (yytname[YYTRANSLATE (yychar)]);
+	  yysize += yystrlen ("syntax error, unexpected ") + 1;
+	  yysize += yystrlen (yytname[yytype]);
 	  yymsg = (char *) YYSTACK_ALLOC (yysize);
 	  if (yymsg != 0)
 	    {
-	      char *yyp = yystpcpy (yymsg, "parse error, unexpected ");
-	      yyp = yystpcpy (yyp, yytname[YYTRANSLATE (yychar)]);
+	      char *yyp = yystpcpy (yymsg, "syntax error, unexpected ");
+	      yyp = yystpcpy (yyp, yytname[yytype]);
 
 	      if (yycount < 5)
 		{
@@ -1182,7 +1475,7 @@ yyerrlab:
 		  for (yyx = yyn < 0 ? -yyn : 0;
 		       yyx < (int) (sizeof (yytname) / sizeof (char *));
 		       yyx++)
-		    if (yycheck[yyx + yyn] == yyx)
+		    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
 		      {
 			const char *yyq = ! yycount ? ", expecting " : " or ";
 			yyp = yystpcpy (yyp, yyq);
@@ -1194,102 +1487,92 @@ yyerrlab:
 	      YYSTACK_FREE (yymsg);
 	    }
 	  else
-	    yyerror ("parse error; also virtual memory exhausted");
+	    yyerror ("syntax error; also virtual memory exhausted");
 	}
       else
-#endif /* defined (YYERROR_VERBOSE) */
-	yyerror ("parse error");
+#endif /* YYERROR_VERBOSE */
+	yyerror ("syntax error");
     }
-  goto yyerrlab1;
 
 
-/*--------------------------------------------------.
-| yyerrlab1 -- error raised explicitly by an action |
-`--------------------------------------------------*/
-yyerrlab1:
+
   if (yyerrstatus == 3)
     {
       /* If just tried and failed to reuse lookahead token after an
 	 error, discard it.  */
 
-      /* return failure if at end of input */
+      /* Return failure if at end of input.  */
       if (yychar == YYEOF)
-	YYABORT;
-      YYDPRINTF ((stderr, "Discarding token %d (%s).\n",
-		  yychar, yytname[yychar1]));
+        {
+	  /* Pop the error token.  */
+          YYPOPSTACK;
+	  /* Pop the rest of the stack.  */
+	  while (yyss < yyssp)
+	    {
+	      YYDSYMPRINTF ("Error: popping", yystos[*yyssp], yyvsp, yylsp);
+	      yydestruct (yystos[*yyssp], yyvsp);
+	      YYPOPSTACK;
+	    }
+	  YYABORT;
+        }
+
+      YYDSYMPRINTF ("Error: discarding", yytoken, &yylval, &yylloc);
+      yydestruct (yytoken, &yylval);
       yychar = YYEMPTY;
+
     }
 
   /* Else will try to reuse lookahead token after shifting the error
      token.  */
+  goto yyerrlab2;
 
-  yyerrstatus = 3;		/* Each real token shifted decrements this */
 
-  goto yyerrhandle;
+/*----------------------------------------------------.
+| yyerrlab1 -- error raised explicitly by an action.  |
+`----------------------------------------------------*/
+yyerrlab1:
 
+  /* Suppress GCC warning that yyerrlab1 is unused when no action
+     invokes YYERROR.  */
+#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
+  __attribute__ ((__unused__))
+#endif
 
-/*-------------------------------------------------------------------.
-| yyerrdefault -- current state does not do anything special for the |
-| error token.                                                       |
-`-------------------------------------------------------------------*/
-yyerrdefault:
-#if 0
-  /* This is wrong; only states that explicitly want error tokens
-     should shift them.  */
 
-  /* If its default is to accept any token, ok.  Otherwise pop it.  */
-  yyn = yydefact[yystate];
-  if (yyn)
-    goto yydefault;
-#endif
+  goto yyerrlab2;
 
 
 /*---------------------------------------------------------------.
-| yyerrpop -- pop the current state because it cannot handle the |
-| error token                                                    |
+| yyerrlab2 -- pop states until the error token can be shifted.  |
 `---------------------------------------------------------------*/
-yyerrpop:
-  if (yyssp == yyss)
-    YYABORT;
-  yyvsp--;
-  yystate = *--yyssp;
-#if YYLSP_NEEDED
-  yylsp--;
-#endif
+yyerrlab2:
+  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
 
-#if YYDEBUG
-  if (yydebug)
+  for (;;)
     {
-      short *yyssp1 = yyss - 1;
-      YYFPRINTF (stderr, "Error: state stack now");
-      while (yyssp1 != yyssp)
-	YYFPRINTF (stderr, " %d", *++yyssp1);
-      YYFPRINTF (stderr, "\n");
-    }
-#endif
+      yyn = yypact[yystate];
+      if (yyn != YYPACT_NINF)
+	{
+	  yyn += YYTERROR;
+	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+	    {
+	      yyn = yytable[yyn];
+	      if (0 < yyn)
+		break;
+	    }
+	}
 
-/*--------------.
-| yyerrhandle.  |
-`--------------*/
-yyerrhandle:
-  yyn = yypact[yystate];
-  if (yyn == YYFLAG)
-    goto yyerrdefault;
+      /* Pop the current state because it cannot handle the error token.  */
+      if (yyssp == yyss)
+	YYABORT;
 
-  yyn += YYTERROR;
-  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)
-    goto yyerrdefault;
+      YYDSYMPRINTF ("Error: popping", yystos[*yyssp], yyvsp, yylsp);
+      yydestruct (yystos[yystate], yyvsp);
+      yyvsp--;
+      yystate = *--yyssp;
 
-  yyn = yytable[yyn];
-  if (yyn < 0)
-    {
-      if (yyn == YYFLAG)
-	goto yyerrpop;
-      yyn = -yyn;
-      goto yyreduce;
+      YY_STACK_PRINT (yyss, yyssp);
     }
-  else if (yyn == 0)
-    goto yyerrpop;
 
   if (yyn == YYFINAL)
     YYACCEPT;
@@ -1297,9 +1580,7 @@ yyerrhandle:
   YYDPRINTF ((stderr, "Shifting error token, "));
 
   *++yyvsp = yylval;
-#if YYLSP_NEEDED
-  *++yylsp = yylloc;
-#endif
+
 
   yystate = yyn;
   goto yynewstate;
@@ -1319,13 +1600,15 @@ yyabortlab:
   yyresult = 1;
   goto yyreturn;
 
-/*---------------------------------------------.
-| yyoverflowab -- parser overflow comes here.  |
-`---------------------------------------------*/
+#ifndef yyoverflow
+/*----------------------------------------------.
+| yyoverflowlab -- parser overflow comes here.  |
+`----------------------------------------------*/
 yyoverflowlab:
   yyerror ("parser stack overflow");
   yyresult = 2;
   /* Fall through.  */
+#endif
 
 yyreturn:
 #ifndef yyoverflow
@@ -1516,3 +1799,5 @@ yyerror (str)
 {
   /* Do nothing.  We don't print error messages here.  */
 }
+
+
Index: gcc-4.4.4/libcpp/ChangeLog
===================================================================
--- gcc-4.4.4/libcpp/ChangeLog
+++ gcc-4.4.4/libcpp/ChangeLog
@@ -1,3 +1,8 @@
+2009-10-09  Neil Vachharajani <nvachhar@google.com>
+
+	* directives.c (DIRECTIVE_TABLE): Remove DEPRECATED from ident and
+	sccs.
+
 2010-04-29  Release Manager
 
 	* GCC 4.4.4 released.
Index: gcc-4.4.4/libcpp/directives.c
===================================================================
--- gcc-4.4.4/libcpp/directives.c
+++ gcc-4.4.4/libcpp/directives.c
@@ -152,11 +152,11 @@ D(error,	T_ERROR,	STDC89,    0)		   /*  
 D(pragma,	T_PRAGMA,	STDC89,    IN_I)	   /*    195 */ \
 D(warning,	T_WARNING,	EXTENSION, 0)		   /*     22 */ \
 D(include_next,	T_INCLUDE_NEXT,	EXTENSION, INCL | EXPAND)  /*     19 */ \
-D(ident,	T_IDENT,	EXTENSION, IN_I | DEPRECATED) /*     11 */ \
+D(ident,	T_IDENT,	EXTENSION, IN_I)           /*     11 */ \
 D(import,	T_IMPORT,	EXTENSION, INCL | EXPAND)  /* 0 ObjC */	\
 D(assert,	T_ASSERT,	EXTENSION, DEPRECATED)	   /* 0 SVR4 */	\
 D(unassert,	T_UNASSERT,	EXTENSION, DEPRECATED)	   /* 0 SVR4 */	\
-D(sccs,		T_SCCS,		EXTENSION, IN_I | DEPRECATED) /* 0 SVR4? */
+D(sccs,		T_SCCS,		EXTENSION, IN_I)           /* 0 SVR4? */
 
 /* #sccs is synonymous with #ident.  */
 #define do_sccs do_ident
Index: gcc-4.4.4/libstdc++-v3/acinclude.m4
===================================================================
--- gcc-4.4.4/libstdc++-v3/acinclude.m4
+++ gcc-4.4.4/libstdc++-v3/acinclude.m4
@@ -2444,7 +2444,11 @@ AC_DEFUN([GLIBCXX_ENABLE_ATOMIC_BUILTINS
   old_CXXFLAGS="$CXXFLAGS"
   
   # Compile unoptimized.
-  CXXFLAGS='-O0 -S'
+  # XXX: On sparc, use the lowest practical CPU level # to avoid false positives
+  case $host in
+      sparc*-*solaris*) CXXFLAGGS='-O0 -S -mcpu=v8';;
+      *) CXXFLAGS='-O0 -S';;
+  esac
 
   # Fake what AC_TRY_COMPILE does, without linking as this is
   # unnecessary for a builtins test.
Index: gcc-4.4.4/libstdc++-v3/configure
===================================================================
--- gcc-4.4.4/libstdc++-v3/configure
+++ gcc-4.4.4/libstdc++-v3/configure
@@ -14758,7 +14758,11 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
   old_CXXFLAGS="$CXXFLAGS"
 
   # Compile unoptimized.
-  CXXFLAGS='-O0 -S'
+  # XXX: On sparc, use the lowest practical CPU level # to avoid false positives
+  case $host in
+      sparc*-*solaris*) CXXFLAGS='-O0 -S -mcpu=v8';;
+      *) CXXFLAGS='-O0 -S';;
+  esac
 
   # Fake what AC_TRY_COMPILE does, without linking as this is
   # unnecessary for a builtins test.
Index: gcc-4.4.4/libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc
===================================================================
--- gcc-4.4.4/libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc
+++ gcc-4.4.4/libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc
@@ -20,10 +20,10 @@
 
 // 27.6.1.2.2 arithmetic extractors
 
-// XXX This test fails on sparc-solaris2 because of a bug in libc
+// XXX This test fails on Solaris 2 because of a bug in libc
 // XXX sscanf for very long input.  See:
 // XXX http://gcc.gnu.org/ml/gcc/2002-12/msg01422.html
-// { dg-do run { xfail { { sparc*-*-solaris2* } || lax_strtofp } } }
+// { dg-do run { xfail { { *-*-solaris2* } || lax_strtofp } } }
 
 #include <istream>
 #include <sstream>
